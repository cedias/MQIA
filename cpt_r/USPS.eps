%!PS-Adobe-2.0 EPSF-2.0
%%Title: USPS.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Mon Mar 10 09:23:01 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (USPS.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (charles)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 10 09:23:01 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1497 6128 2458 1863 BoxColFill
LCb setrgbcolor
1497 6128 M
0 1863 V
2458 0 V
0 -1863 V
-2458 0 V
stroke
0.500 UL
LTb
1497 7991 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 1497 7991 N 1497 6128 L 3955 6128 L 3955 7991 L Z clip
gsave
1497 7991 translate
2458 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
000000000000000c3227000000000000000000000000053b3f0d00000000000000000000000014
3f3700000000000000000000000000243f33000000000000000000000000002a3f2a0000000000
00000000000000002e3f2400000000000000000000000000353f18000000000000000000000000
033d3f190000000000000000000000000c3f3f13000000000000000000000000183f3f14000000
000000000000000000103f3f0f0000000000000000000000000f3f3f1200000000000000000000
0000123f3f22000000000000000000000000043d3f3b07000000000000000000000000323f3f39
1100000000000000000000000d363f390f0000000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
1497 6303 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 6303 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
1497 6536 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 6536 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
1497 6768 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 6768 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
1497 7001 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 7001 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
1497 7234 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 7234 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1497 7467 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 7467 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
1497 7700 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 7700 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
1497 7933 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 7933 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
1727 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 1727 5928 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
2035 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 2035 5928 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
2342 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 2342 5928 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
2649 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 2649 5928 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
2956 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 2956 5928 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
3264 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 3264 5928 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
3571 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 3571 5928 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
3878 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 3878 5928 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1497 7991 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 4732 6128 2458 1863 BoxColFill
LCb setrgbcolor
4732 6128 M
0 1863 V
2458 0 V
0 -1863 V
-2458 0 V
stroke
0.500 UL
LTb
4732 7991 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 4732 7991 N 4732 6128 L 7190 6128 L 7190 7991 L Z clip
gsave
4732 7991 translate
2458 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
000c363f2c250a00000000000000000000313f3f3f3f392a0a0000000000000000373f1a213a3f
3f3e200000081f2100002d3f3817021c383f3f181b3d34170000183a3f3f351f1d3f3f3f3f2d02
000000000d363f3f3f3f3f3f3f29000000000000000111282929272c3f21000000000000000000
00000000293f1f00000000000000000000000000343f1e000000000000000000000000013d3f13
000000000000000000000000053e34000000000000000000000000042f3f140000000000000000
00000012323f1b0000000000000000091a293b3f3e180000000000000000133f3f3f3e2b100000
00000000000000322c220f0400000000000000000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
4732 6303 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 6303 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
4732 6536 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 6536 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
4732 6768 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 6768 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
4732 7001 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 7001 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
4732 7234 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 7234 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
4732 7467 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 7467 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
4732 7700 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 7700 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
4732 7933 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 7933 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
4962 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 4962 5928 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
5270 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 5270 5928 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
5577 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 5577 5928 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
5884 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 5884 5928 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
6191 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 6191 5928 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
6499 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 6499 5928 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
6806 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 6806 5928 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
7113 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 7113 5928 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
4732 7991 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 7967 6128 2457 1863 BoxColFill
LCb setrgbcolor
7967 6128 M
0 1863 V
2457 0 V
0 -1863 V
-2457 0 V
stroke
0.500 UL
LTb
7967 7991 M
0 -1863 V
2457 0 V
0 1863 R
-2457 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 7967 7991 N 7967 6128 L 10424 6128 L 10424 7991 L Z clip
gsave
7967 7991 translate
2457 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
00000121333f3f362a251300000000000000303f3f3f3f3f3f3f3f3a2101000000013831151515
1a2c3f3f3f3f2f000000000c010000000000000e3e3f3801000000000000000000000000163f37
00000000000000000000000005313f1700000000000000142a1e151a333e1c0000000000000012
3f3f3f3f3f39090000000000000000011a333f3f3f3e1d00000000000000000000000c243d3f3f
320200000000000000000000000d3a3f3f1b000000000000000000000000063d3f34000000000d
380f0000000000002b3f3100000000273f3b1b090004151d3d3f11000000000e3f3f3f3f3f3f3f
3f3e1d0000000000000d363f3f3f3f3b220200000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
7967 6303 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 6303 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
7967 6536 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 6536 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
7967 6768 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 6768 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
7967 7001 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 7001 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
7967 7234 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 7234 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
7967 7467 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 7467 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
7967 7700 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 7700 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
7967 7933 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 7933 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
8197 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 8197 5928 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
8504 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 8504 5928 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
8812 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 8812 5928 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
9119 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 9119 5928 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
9426 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 9426 5928 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
9733 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 9733 5928 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
10040 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 10040 5928 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
10347 6128 M
0 88 V
stroke
0.00 0.00 0.00 C 10347 5928 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
7967 7991 M
0 -1863 V
2457 0 V
0 1863 R
-2457 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1497 3539 2458 1863 BoxColFill
LCb setrgbcolor
1497 3539 M
0 1863 V
2458 0 V
0 -1863 V
-2458 0 V
stroke
0.500 UL
LTb
1497 5402 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 1497 5402 N 1497 3539 L 3955 3539 L 3955 5402 L Z clip
gsave
1497 5402 translate
2458 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
00000000012d2000000000000000000000000000043a2600000000000000000000000000002c39
0000000000000000000000000000143f1300000000000000000000000000023b3c251f05000000
000000000000000e3a3f3f32090000000000000000052a3e3b2c3f22000000000000000002313f
310800323e0f00000000000001273f2f010000053c3c090000000000163f3404000000000c3e32
05000000013a3e0a000000000000193f2d010000093f300000000000000000263f2f0100073f27
000000000000000001243f2200002e3e160000000000000000002b3f0400032d3f35260b000000
00000001270b00000224363f29000000000000000002
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
1497 3714 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 3714 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
1497 3947 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 3947 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
1497 4179 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 4179 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
1497 4412 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 4412 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
1497 4645 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 4645 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1497 4878 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 4878 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
1497 5111 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 5111 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
1497 5344 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 5344 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
1727 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 1727 3339 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
2035 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 2035 3339 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
2342 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 2342 3339 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
2649 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 2649 3339 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
2956 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 2956 3339 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
3264 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 3264 3339 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
3571 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 3571 3339 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
3878 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 3878 3339 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1497 5402 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 4732 3539 2458 1863 BoxColFill
LCb setrgbcolor
4732 3539 M
0 1863 V
2458 0 V
0 -1863 V
-2458 0 V
stroke
0.500 UL
LTb
4732 5402 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 4732 5402 N 4732 3539 L 7190 3539 L 7190 5402 L Z clip
gsave
4732 5402 translate
2458 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
0000031d343f3f3b2b13010000000000000b3a3f372a373f3f3f3a150000000000373c1d030000
061a373f3f2a02000000331300000000000001183b3f2e0200000000000000000000000006353f
28000000000000000000000000000e3f3e06000000000000000000000000002d3f140000000000
0000000000000000313f0c000000000000000000000000113f300000090000000000000000031b
3c3a0b00103f3320160c0c0c181f3b3f320b000007393f3f3f3f3f3f3f3f30150000000000103f
3f371d1d1d14080000000000000000133c3f321e12120c040402010000000000082b3f3f3f3f3f
3f3e3b39180000000000022e383232323232333f2900
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
4732 3714 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 3714 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
4732 3947 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 3947 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
4732 4179 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 4179 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
4732 4412 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 4412 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
4732 4645 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 4645 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
4732 4878 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 4878 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
4732 5111 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 5111 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
4732 5344 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 5344 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
4962 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 4962 3339 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
5270 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 5270 3339 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
5577 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 5577 3339 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
5884 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 5884 3339 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
6191 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 6191 3339 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
6499 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 6499 3339 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
6806 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 6806 3339 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
7113 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 7113 3339 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
4732 5402 M
0 -1863 V
2458 0 V
0 1863 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 7967 3539 2457 1863 BoxColFill
LCb setrgbcolor
7967 3539 M
0 1863 V
2457 0 V
0 -1863 V
-2457 0 V
stroke
0.500 UL
LTb
7967 5402 M
0 -1863 V
2457 0 V
0 1863 R
-2457 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 7967 5402 N 7967 3539 L 10424 3539 L 10424 5402 L Z clip
gsave
7967 5402 translate
2457 -1863 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
000000000000000000000000000000000000000a0c0c0c090000000000000000000b353f3f3f3f
3e3838290f000000000e3b3f2f2a2a2a3f3f3f3f3f280b00002c3e11000000013a3f1a10283e3c
0c003a3e0900000000263f210000163c3905253f1c000000000b3b3f280000133f230a3e350000
0000000f373f3a15002d3c00373f120000000000051b393f3f3f36000d3f31020000000000000c
293636140000213f230000000000000000000000000004333e1400000000000000000000000000
113e33000000000000000000000000000014391400000000000000000000000000000600000000
00000000000000000000000000000000000000000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
7967 3714 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 3714 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
7967 3947 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 3947 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
7967 4179 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 4179 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
7967 4412 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 4412 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
7967 4645 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 4645 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
7967 4878 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 4878 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
7967 5111 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 5111 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
7967 5344 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 5344 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
8197 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 8197 3339 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
8504 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 8504 3339 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
8812 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 8812 3339 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
9119 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 9119 3339 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
9426 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 9426 3339 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
9733 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 9733 3339 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
10040 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 10040 3339 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
10347 3539 M
0 88 V
stroke
0.00 0.00 0.00 C 10347 3339 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
7967 5402 M
0 -1863 V
2457 0 V
0 1863 R
-2457 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1497 950 2458 1864 BoxColFill
LCb setrgbcolor
1497 950 M
0 1864 V
2458 0 V
0 -1864 V
-2458 0 V
stroke
0.500 UL
LTb
1497 2814 M
0 -1864 V
2458 0 V
0 1864 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 1497 2814 N 1497 950 L 3955 950 L 3955 2814 L Z clip
gsave
1497 2814 translate
2458 -1864 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
00000000000009371700000000000000000000000000263f33000000000000000000000000001c
3f3c040000000000000000000000000b3f3f1b00000000000000000000000000383f3903000000
000000000000000000123e3f2100000000000000000000000000293f3c08000000000000000000
000000053d3f2600000000000000000000000000213f3e08000000000000000000000000043b3f
2700000000000000000000000000253f3d07000000000000000000000000093f3f260000000000
0000020303030301333f3a00000000001b323c3f3f3f3f373e3f3400000000293f3f3f3e3e3e3f
3f3f3f260000000036291b0c000000050f111f0d0000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
1497 1125 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 1125 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
1497 1358 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 1358 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
1497 1591 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 1591 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
1497 1824 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 1824 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
1497 2057 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 2057 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1497 2290 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 2290 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
1497 2523 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 2523 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
1497 2756 M
88 0 V
stroke
0.00 0.00 0.00 C 1377 2756 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
1727 950 M
0 88 V
stroke
0.00 0.00 0.00 C 1727 750 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
2035 950 M
0 88 V
stroke
0.00 0.00 0.00 C 2035 750 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
2342 950 M
0 88 V
stroke
0.00 0.00 0.00 C 2342 750 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
2649 950 M
0 88 V
stroke
0.00 0.00 0.00 C 2649 750 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
2956 950 M
0 88 V
stroke
0.00 0.00 0.00 C 2956 750 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
3264 950 M
0 88 V
stroke
0.00 0.00 0.00 C 3264 750 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
3571 950 M
0 88 V
stroke
0.00 0.00 0.00 C 3571 750 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
3878 950 M
0 88 V
stroke
0.00 0.00 0.00 C 3878 750 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1497 2814 M
0 -1864 V
2458 0 V
0 1864 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 4732 950 2458 1864 BoxColFill
LCb setrgbcolor
4732 950 M
0 1864 V
2458 0 V
0 -1864 V
-2458 0 V
stroke
0.500 UL
LTb
4732 2814 M
0 -1864 V
2458 0 V
0 1864 R
-2458 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 4732 2814 N 4732 950 L 7190 950 L 7190 2814 L Z clip
gsave
4732 2814 translate
2458 -1864 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
00000000001c383f3f3b2b1200000000000000012e3c3636373f3f3f1c000000000000293c0d00
0000051f3f3e0900000000013e2c000000000000363f2000000000023e37000000000000273f18
0000000000303f2502000000173e32020000000000093b3f39191f343f3609000000000000000d
3d3f3f3f3f270400000000000006303f3f3f373f3f3108000000000000213f381c090011393f3b
100000000000163f3e20000000031e3e3c040000000001243f3f300d0000002c3f0a0000000000
0013363f3f2a0404392f010000000000000001233e3f3d383707000000000000000000000a353f
34080000000000000000000000002128030000000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
4732 1125 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 1125 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
4732 1358 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 1358 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
4732 1591 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 1591 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
4732 1824 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 1824 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
4732 2057 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 2057 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
4732 2290 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 2290 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
4732 2523 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 2523 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
4732 2756 M
88 0 V
stroke
0.00 0.00 0.00 C 4612 2756 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
4962 950 M
0 88 V
stroke
0.00 0.00 0.00 C 4962 750 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
5270 950 M
0 88 V
stroke
0.00 0.00 0.00 C 5270 750 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
5577 950 M
0 88 V
stroke
0.00 0.00 0.00 C 5577 750 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
5884 950 M
0 88 V
stroke
0.00 0.00 0.00 C 5884 750 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
6191 950 M
0 88 V
stroke
0.00 0.00 0.00 C 6191 750 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
6499 950 M
0 88 V
stroke
0.00 0.00 0.00 C 6499 750 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
6806 950 M
0 88 V
stroke
0.00 0.00 0.00 C 6806 750 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
7113 950 M
0 88 V
stroke
0.00 0.00 0.00 C 7113 750 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
4732 2814 M
0 -1864 V
2458 0 V
0 1864 R
-2458 0 R
1.000 UP
stroke
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 7967 950 2457 1864 BoxColFill
LCb setrgbcolor
7967 950 M
0 1864 V
2457 0 V
0 -1864 V
-2457 0 V
stroke
0.500 UL
LTb
7967 2814 M
0 -1864 V
2457 0 V
0 1864 R
-2457 0 R
1.000 UP
% Begin plot #1
stroke
1.000 UL
LT0
LC0 setrgbcolor
%%%%BeginImage
gsave 7967 2814 N 7967 950 L 10424 950 L 10424 2814 L Z clip
gsave
7967 2814 translate
2457 -1864 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 16
  /Height 16
  /BitsPerComponent 8
  /ImageMatrix [ 16 0 0 16 0 0 ]
  /Decode [ 0 255 ]
  /imagebuf 256 string def
  /DataSource {currentfile imagebuf readhexstring pop}
  /MultipleDataSources false
  /Interpolate false
>>
image
00000000000000022d3300000000000000000000000000123f3700000000000000000000000000
0c3f3a02000000000000000000000000053e3f0b00000000000000000000000000363f1f000000
00000000000000000000243f2d00000000000000000f2e36361f183f3c06000000000000143e3f
3f3f3f3c3f3f170000000000002b39050011223a3f3f360300000000003a3c0100000005243f3f
290300000000343f0a00000000063f3f3f2d00000000203f270000000000132a3f390000000002
393f200200000000133f28000000000006393f371a09060c3a380500000000000008323f3f3f3d
3f3d100000000000000000010e242c3c290600000000
grestore
grestore
%%%%EndImage
% End plot #1
0.500 UL
LTb
7967 1125 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 1125 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
7967 1358 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 1358 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
7967 1591 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 1591 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
7967 1824 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 1824 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
7967 2057 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 2057 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
7967 2290 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 2290 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
7967 2523 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 2523 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MRshow
0.500 UL
LTb
7967 2756 M
88 0 V
stroke
0.00 0.00 0.00 C 7847 2756 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MRshow
0.500 UL
LTb
8197 950 M
0 88 V
stroke
0.00 0.00 0.00 C 8197 750 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
8504 950 M
0 88 V
stroke
0.00 0.00 0.00 C 8504 750 M
[ [({}) 200.0 0.0 true true 0 (4)]
] -66.7 MCshow
0.500 UL
LTb
8812 950 M
0 88 V
stroke
0.00 0.00 0.00 C 8812 750 M
[ [({}) 200.0 0.0 true true 0 (6)]
] -66.7 MCshow
0.500 UL
LTb
9119 950 M
0 88 V
stroke
0.00 0.00 0.00 C 9119 750 M
[ [({}) 200.0 0.0 true true 0 (8)]
] -66.7 MCshow
0.500 UL
LTb
9426 950 M
0 88 V
stroke
0.00 0.00 0.00 C 9426 750 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
9733 950 M
0 88 V
stroke
0.00 0.00 0.00 C 9733 750 M
[ [({}) 200.0 0.0 true true 0 (12)]
] -66.7 MCshow
0.500 UL
LTb
10040 950 M
0 88 V
stroke
0.00 0.00 0.00 C 10040 750 M
[ [({}) 200.0 0.0 true true 0 (14)]
] -66.7 MCshow
0.500 UL
LTb
10347 950 M
0 88 V
stroke
0.00 0.00 0.00 C 10347 750 M
[ [({}) 200.0 0.0 true true 0 (16)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
7967 2814 M
0 -1864 V
2457 0 V
0 1864 R
-2457 0 R
1.000 UP
stroke
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
