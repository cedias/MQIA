%!PS-Adobe-2.0 EPSF-2.0
%%Title: frontiereGauss.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Mar 12 17:56:13 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (frontiereGauss.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (charles)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 12 17:56:13 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
780 945 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 945 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MRshow
0.500 UL
LTb
780 2108 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 2108 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
0.500 UL
LTb
780 3271 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 3271 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
0.500 UL
LTb
780 4434 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 4434 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
780 5598 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 5598 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
0.500 UL
LTb
780 6761 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 6761 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
780 7924 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 7924 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MRshow
0.500 UL
LTb
1723 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 1723 200 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
0.500 UL
LTb
3227 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 3227 200 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
0.500 UL
LTb
4731 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 4731 200 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
0.500 UL
LTb
6235 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 6235 200 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
7740 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 7740 200 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MCshow
0.500 UL
LTb
9244 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 9244 200 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MCshow
0.500 UL
LTb
10748 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 10748 200 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 8399 N
780 400 L
10379 0 V
0 7999 V
780 8399 L
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
1.00 0.00 0.00 C 6543 4756 Star
6272 3888 Star
8871 6426 Star
8137 3519 Star
6367 7422 Star
7979 4306 Star
6633 6830 Star
7920 5460 Star
8231 6438 Star
7952 5071 Star
6935 4984 Star
5855 6540 Star
7228 6187 Star
9590 5803 Star
6828 6016 Star
4679 3663 Star
6064 5659 Star
6630 3469 Star
8399 3658 Star
4686 5854 Star
6393 5945 Star
8016 6996 Star
9286 6755 Star
8093 5913 Star
6065 6872 Star
7281 6164 Star
6496 4377 Star
5757 5169 Star
7917 7622 Star
7901 5981 Star
5404 5194 Star
4807 5364 Star
8904 6204 Star
5705 6320 Star
6688 6986 Star
9014 5512 Star
8465 5276 Star
8038 5817 Star
5385 5468 Star
8939 6193 Star
8109 5095 Star
7445 6738 Star
5682 4707 Star
6096 5114 Star
7377 5915 Star
8669 6578 Star
7609 5762 Star
7560 5561 Star
7071 6333 Star
7909 4944 Star
7179 7122 Star
7963 4681 Star
7199 6740 Star
6207 6289 Star
7270 6256 Star
8597 6731 Star
6397 6724 Star
5553 5387 Star
7639 5138 Star
4456 6644 Star
6513 6088 Star
8115 4782 Star
9053 5245 Star
6326 6802 Star
9271 6602 Star
5822 5520 Star
7315 5656 Star
5102 5700 Star
8785 5243 Star
7170 7745 Star
7711 6010 Star
8722 3828 Star
7157 6453 Star
5193 5159 Star
6959 5239 Star
5587 5045 Star
10791 7078 Star
7801 6032 Star
6660 6164 Star
4832 6173 Star
7463 4897 Star
7581 4893 Star
7326 3675 Star
6726 6535 Star
6739 4495 Star
6722 6685 Star
6162 5864 Star
7163 3844 Star
4810 5557 Star
8664 6353 Star
8470 4661 Star
7727 4999 Star
7498 5822 Star
8283 5803 Star
3186 4697 Star
8966 5937 Star
6702 5310 Star
4528 5866 Star
7563 5267 Star
6570 4282 Star
7322 6855 Star
7462 6795 Star
6327 7215 Star
5957 3048 Star
7059 5485 Star
7485 6809 Star
5727 4858 Star
6489 7127 Star
6052 5135 Star
8816 5193 Star
6737 5072 Star
6762 5823 Star
5675 6872 Star
6993 6660 Star
7130 5478 Star
5594 6281 Star
6430 4893 Star
6814 4984 Star
6880 5597 Star
7430 5351 Star
7917 4824 Star
8919 5755 Star
6764 5029 Star
6446 5978 Star
6478 5004 Star
7536 5014 Star
4840 4019 Star
5732 3480 Star
5808 4787 Star
5162 4051 Star
6964 6276 Star
8527 6279 Star
6630 4228 Star
7942 5924 Star
6829 4887 Star
7463 7190 Star
5406 5419 Star
6984 5254 Star
5719 5249 Star
6935 6161 Star
8353 4895 Star
6958 4138 Star
8553 7525 Star
6402 6591 Star
6906 5629 Star
7761 4435 Star
7176 6577 Star
8434 3813 Star
4650 6787 Star
8296 4830 Star
6260 4557 Star
6234 5530 Star
7230 6383 Star
6374 4287 Star
6352 5083 Star
7718 6497 Star
4682 5907 Star
7753 5846 Star
5590 5743 Star
6891 5983 Star
8436 6324 Star
8045 5154 Star
8796 4987 Star
7412 6965 Star
6435 4479 Star
5669 4641 Star
7030 6569 Star
8552 7026 Star
4880 6093 Star
7313 5429 Star
6053 5174 Star
7497 5986 Star
7371 5584 Star
8349 6086 Star
5102 5812 Star
5760 7099 Star
9205 6448 Star
7479 6004 Star
6671 7112 Star
7894 4883 Star
5685 6841 Star
6675 8399 Star
6769 5102 Star
5553 7437 Star
7914 5462 Star
7361 5569 Star
11159 5447 Star
6921 4785 Star
8310 5369 Star
6131 6610 Star
6454 5887 Star
7503 5855 Star
7084 4500 Star
5085 6041 Star
7909 4596 Star
5475 5043 Star
8704 5841 Star
8731 4154 Star
6051 5037 Star
6513 5288 Star
6607 5738 Star
5534 5877 Star
5319 4233 Star
7928 6626 Star
7826 5876 Star
6606 5237 Star
6579 4997 Star
7575 4933 Star
5598 5021 Star
8665 4700 Star
6014 6668 Star
7156 5890 Star
8878 5659 Star
8506 6126 Star
7017 5012 Star
6446 6090 Star
8434 4983 Star
7727 3955 Star
6315 5935 Star
6338 4462 Star
8703 5710 Star
5612 4850 Star
6499 6253 Star
7962 5738 Star
5893 6154 Star
8769 5607 Star
8258 4798 Star
8816 7701 Star
6572 5323 Star
7284 5107 Star
7734 4312 Star
7953 4654 Star
9780 5633 Star
5360 5169 Star
4768 5212 Star
8030 6393 Star
6361 5530 Star
6917 6103 Star
4450 5327 Star
5481 5818 Star
7187 5385 Star
6127 6734 Star
6463 5703 Star
9185 4445 Star
5614 7494 Star
5104 5031 Star
8965 6678 Star
7834 6075 Star
8636 4416 Star
6844 5786 Star
8827 7033 Star
6308 6005 Star
6540 5863 Star
7162 4816 Star
6517 4511 Star
7325 4233 Star
6872 4576 Star
5621 5563 Star
8342 4161 Star
5270 5834 Star
6852 5739 Star
7053 6125 Star
7099 5595 Star
6562 6218 Star
6311 4262 Star
7819 5505 Star
7803 5546 Star
8100 4122 Star
8495 5264 Star
7167 4186 Star
6759 4784 Star
7197 5463 Star
6248 5690 Star
7184 6334 Star
7333 5499 Star
7021 5654 Star
6229 4061 Star
6940 6224 Star
8984 5121 Star
7413 5721 Star
6485 4637 Star
9577 7226 Star
6407 4616 Star
7890 5195 Star
5745 4379 Star
6798 5543 Star
5535 5034 Star
6735 6653 Star
6706 3563 Star
7782 5038 Star
7915 6099 Star
6313 5906 Star
6019 5596 Star
7916 7053 Star
7362 5153 Star
6276 4378 Star
8508 4030 Star
6532 4403 Star
7677 5111 Star
3953 7046 Star
5924 6551 Star
7553 6292 Star
5913 5350 Star
7747 5280 Star
5600 5795 Star
5398 6416 Star
6727 4172 Star
6472 5510 Star
7815 5561 Star
8353 5867 Star
6073 6740 Star
6160 6177 Star
8624 6427 Star
5870 5578 Star
7736 6478 Star
6655 4946 Star
6562 5163 Star
4083 6138 Star
7294 7043 Star
5894 4459 Star
6060 6074 Star
9824 6087 Star
8236 4095 Star
8558 6141 Star
5053 4473 Star
6411 5267 Star
5307 5368 Star
3859 6719 Star
7754 5483 Star
6780 5436 Star
6360 4411 Star
7480 8230 Star
8420 6173 Star
6152 5127 Star
6962 5594 Star
7616 4678 Star
8418 5850 Star
6669 6162 Star
6048 6501 Star
7428 3817 Star
6741 5817 Star
7871 4574 Star
6803 5343 Star
7476 5400 Star
6731 5590 Star
7685 4414 Star
6845 4503 Star
8071 5654 Star
5631 5362 Star
7234 5557 Star
8406 7312 Star
8021 7449 Star
6602 6542 Star
7603 4220 Star
6979 6532 Star
7752 6457 Star
7543 6125 Star
9809 6220 Star
6426 4584 Star
7530 4906 Star
7358 3813 Star
5774 3918 Star
8809 5580 Star
8508 5655 Star
6326 6091 Star
7479 5755 Star
6815 5335 Star
7280 6007 Star
5676 5734 Star
6761 5176 Star
7783 6897 Star
6266 4519 Star
6877 3891 Star
8442 4850 Star
6759 4380 Star
8001 6048 Star
6080 6196 Star
8429 6292 Star
5496 5404 Star
5929 6311 Star
5872 5757 Star
6662 5617 Star
7091 4488 Star
7211 6107 Star
5848 4823 Star
6614 5532 Star
8802 5567 Star
7406 5052 Star
8272 2369 Star
6858 4815 Star
6138 6174 Star
8069 3771 Star
7247 5195 Star
8734 4700 Star
6517 5009 Star
9838 6893 Star
6992 6516 Star
7351 5912 Star
6657 8224 Star
6639 5933 Star
7560 7053 Star
7759 4062 Star
5746 5114 Star
7930 3498 Star
6426 7619 Star
8080 2816 Star
6086 6123 Star
8948 6017 Star
5104 6261 Star
7413 4938 Star
6739 4697 Star
6875 5259 Star
8028 4759 Star
4609 5822 Star
7177 4537 Star
5423 5528 Star
6978 5013 Star
8898 7110 Star
5485 4856 Star
7424 6538 Star
8331 8006 Star
6942 5090 Star
5931 7052 Star
5853 6095 Star
8411 3451 Star
5583 4387 Star
7510 7414 Star
8878 5560 Star
7616 3909 Star
7546 5816 Star
6987 4982 Star
6374 5677 Star
7189 6968 Star
8445 5870 Star
6992 4404 Star
7695 4023 Star
6030 4591 Star
2852 4588 Star
7556 5416 Star
6781 6893 Star
6857 6326 Star
6758 5680 Star
8497 6568 Star
6713 6320 Star
6585 6143 Star
7751 3971 Star
8907 4708 Star
5992 5329 Star
8035 4946 Star
7950 3831 Star
9974 6718 Star
7961 6650 Star
5947 3942 Star
6728 6583 Star
7199 7100 Star
7606 5538 Star
7915 7502 Star
6911 7693 Star
8009 5708 Star
6490 7225 Star
6814 3574 Star
7674 6647 Star
7507 6805 Star
7424 4683 Star
8048 7579 Star
7835 5641 Star
6797 7083 Star
8319 4975 Star
8449 6029 Star
5972 5482 Star
5379 5743 Star
7218 6929 Star
6265 5046 Star
6515 5846 Star
5323 3630 Star
6717 5343 Star
5647 3125 Star
8643 6616 Star
9124 6189 Star
6607 6079 Star
9050 5127 Star
7437 6679 Star
8399 3897 Star
6557 5253 Star
5157 5363 Star
6249 4393 Star
7799 4940 Star
9575 6690 Star
9274 5806 Star
6329 4753 Star
4643 4979 Star
6359 5586 Star
5383 4714 Star
4208 4682 Star
5457 4977 Star
5637 5186 Star
8912 6082 Star
6614 5390 Star
8854 5615 Star
6474 4543 Star
% End plot #1
% Begin plot #2
2.000 UP
0.500 UL
LT1
0.00 0.00 1.00 C 5801 2917 Pls
4828 3190 Pls
5461 2183 Pls
3480 2905 Pls
4140 3671 Pls
4659 4330 Pls
5993 4513 Pls
4729 2980 Pls
4485 3715 Pls
4544 3764 Pls
2409 3969 Pls
5962 3562 Pls
5330 2374 Pls
6315 4124 Pls
5178 2479 Pls
4171 3429 Pls
4397 4415 Pls
4107 1606 Pls
4068 2471 Pls
5165 2302 Pls
6642 3085 Pls
4733 3404 Pls
4559 3505 Pls
7111 4494 Pls
4521 4625 Pls
5144 2087 Pls
3060 3911 Pls
6541 2601 Pls
6090 3211 Pls
5609 3611 Pls
4943 2514 Pls
6148 3420 Pls
6347 3844 Pls
5738 2273 Pls
5850 3366 Pls
2397 2804 Pls
5551 3105 Pls
5963 3821 Pls
2697 2834 Pls
5475 4385 Pls
5527 4508 Pls
4872 2877 Pls
6080 3278 Pls
2559 2099 Pls
5305 2596 Pls
5870 3259 Pls
4604 4110 Pls
4702 3009 Pls
4969 4508 Pls
4249 3640 Pls
3723 4140 Pls
4831 2739 Pls
5083 4559 Pls
6586 3408 Pls
4006 4519 Pls
5523 2860 Pls
4724 3990 Pls
6944 2685 Pls
3139 2960 Pls
7276 3288 Pls
5539 3670 Pls
4470 3437 Pls
8797 2600 Pls
5111 3551 Pls
5403 3911 Pls
7068 3195 Pls
4341 3354 Pls
3452 4575 Pls
4800 2742 Pls
7040 2000 Pls
5652 3699 Pls
7988 3785 Pls
5811 1862 Pls
8394 3056 Pls
7019 3601 Pls
4107 5150 Pls
7046 3483 Pls
5809 4134 Pls
2186 2470 Pls
5866 1921 Pls
5604 4001 Pls
5578 2061 Pls
7402 4820 Pls
4866 2148 Pls
3408 4079 Pls
4749 4804 Pls
1815 3000 Pls
3153 3695 Pls
3999 3334 Pls
2869 2231 Pls
7357 4129 Pls
5363 1510 Pls
5531 1981 Pls
4819 2333 Pls
4772 4076 Pls
5258 4339 Pls
4608 3316 Pls
5289 3354 Pls
6288 4322 Pls
7744 1282 Pls
6205 5085 Pls
4534 2628 Pls
5457 2110 Pls
4134 2589 Pls
6386 2380 Pls
4358 3388 Pls
6288 1796 Pls
5478 2963 Pls
6105 2139 Pls
5613 3973 Pls
6949 3325 Pls
7658 3027 Pls
3982 1742 Pls
6007 3702 Pls
3236 2635 Pls
3533 3583 Pls
6152 2815 Pls
4486 1915 Pls
8504 3567 Pls
4461 3420 Pls
6158 2164 Pls
5212 4567 Pls
5117 3072 Pls
4945 4284 Pls
8149 3951 Pls
8775 2535 Pls
5516 3997 Pls
2644 2314 Pls
2861 2464 Pls
5607 2631 Pls
3307 2622 Pls
3894 5045 Pls
4623 1939 Pls
3678 4375 Pls
4032 3793 Pls
4790 3703 Pls
5078 2873 Pls
5967 3853 Pls
4961 3566 Pls
4711 3686 Pls
3887 2234 Pls
4639 2922 Pls
5366 3108 Pls
4221 3858 Pls
6141 3785 Pls
4903 3862 Pls
5366 3557 Pls
3980 2709 Pls
5902 3750 Pls
6501 3057 Pls
5527 2394 Pls
5031 4317 Pls
4083 3809 Pls
6608 4360 Pls
6806 2480 Pls
6630 4002 Pls
6135 2606 Pls
4134 2870 Pls
5277 3469 Pls
4089 2903 Pls
6085 3138 Pls
4561 3483 Pls
3278 3052 Pls
4539 2584 Pls
6143 4691 Pls
5765 2235 Pls
6546 2273 Pls
3563 4023 Pls
5278 2791 Pls
3790 4706 Pls
4590 3241 Pls
3742 2017 Pls
5121 2152 Pls
5057 4255 Pls
5615 4605 Pls
7925 2243 Pls
3924 1928 Pls
5542 4004 Pls
5293 1694 Pls
5703 2745 Pls
5301 3484 Pls
6673 2961 Pls
5815 2930 Pls
5390 3369 Pls
3088 3610 Pls
8082 4055 Pls
5658 3231 Pls
4683 2858 Pls
6404 3214 Pls
5835 3531 Pls
3915 4042 Pls
5816 2466 Pls
5106 5393 Pls
4177 1611 Pls
3905 3388 Pls
4705 3410 Pls
7290 4947 Pls
4663 3088 Pls
5260 4558 Pls
6917 3601 Pls
4343 4080 Pls
780 5084 Pls
5412 1603 Pls
6572 3338 Pls
6238 3917 Pls
5718 3934 Pls
4420 3440 Pls
6410 4100 Pls
4704 3986 Pls
3873 4564 Pls
2870 4272 Pls
5685 2539 Pls
5715 3946 Pls
4156 2599 Pls
6214 2299 Pls
6470 3415 Pls
5954 3802 Pls
2971 1240 Pls
5969 2022 Pls
4338 3115 Pls
2877 2454 Pls
6075 2551 Pls
4768 3667 Pls
4054 4248 Pls
6004 3046 Pls
6225 4985 Pls
6079 2299 Pls
6583 1945 Pls
5383 2605 Pls
4477 3792 Pls
5287 3524 Pls
5839 2505 Pls
3705 4724 Pls
4296 4075 Pls
6400 1882 Pls
5824 5485 Pls
5711 3839 Pls
6171 2869 Pls
6332 2885 Pls
5195 4112 Pls
6664 2044 Pls
7103 2321 Pls
4458 3671 Pls
5766 2418 Pls
5949 3387 Pls
7459 2529 Pls
4496 5006 Pls
6116 3305 Pls
7491 4167 Pls
7140 3113 Pls
5369 3385 Pls
4756 2402 Pls
6942 4023 Pls
8707 5092 Pls
6779 3905 Pls
6235 3972 Pls
5292 2097 Pls
7014 400 Pls
4536 3839 Pls
5778 2878 Pls
4453 3293 Pls
4648 2079 Pls
4265 3798 Pls
4976 1483 Pls
6135 3949 Pls
7413 3106 Pls
4699 5997 Pls
7208 3379 Pls
4772 3812 Pls
5635 3260 Pls
6080 2850 Pls
6906 4742 Pls
6415 4223 Pls
3815 2405 Pls
7510 4884 Pls
4760 2628 Pls
3362 3143 Pls
5549 3583 Pls
5973 4319 Pls
7216 2205 Pls
4356 2706 Pls
5559 3742 Pls
3937 3055 Pls
4887 3656 Pls
4935 4721 Pls
6563 3708 Pls
3303 3010 Pls
4652 3183 Pls
4209 3765 Pls
6334 4589 Pls
4760 4662 Pls
6012 3759 Pls
5691 3675 Pls
4248 4114 Pls
5272 1992 Pls
5572 2993 Pls
5305 4449 Pls
4170 3599 Pls
6816 3875 Pls
5710 3036 Pls
5370 3096 Pls
5997 3447 Pls
5945 3621 Pls
6831 3383 Pls
5370 2390 Pls
4272 3660 Pls
6818 5205 Pls
4449 2932 Pls
5599 1776 Pls
4917 2103 Pls
6516 3689 Pls
2597 2791 Pls
6910 3962 Pls
5621 3255 Pls
6171 3664 Pls
6727 3471 Pls
5601 3107 Pls
5016 2881 Pls
5603 3940 Pls
5659 3260 Pls
4777 1511 Pls
4903 2778 Pls
4689 2357 Pls
5649 1933 Pls
5279 3318 Pls
5530 3472 Pls
6491 2301 Pls
5053 3183 Pls
2535 2454 Pls
4888 1937 Pls
2410 2531 Pls
4148 3702 Pls
4779 2979 Pls
4647 2601 Pls
5172 2120 Pls
3357 2374 Pls
6522 4614 Pls
6381 3051 Pls
3473 2536 Pls
5783 3516 Pls
7169 2405 Pls
4184 2976 Pls
3625 3336 Pls
5855 2922 Pls
4362 2627 Pls
4100 3444 Pls
4692 3284 Pls
7697 3572 Pls
4388 3787 Pls
5944 4907 Pls
5099 3901 Pls
7571 1652 Pls
4605 4109 Pls
6083 3945 Pls
2066 2458 Pls
5394 4150 Pls
5635 3664 Pls
5820 2585 Pls
5949 2276 Pls
9470 3866 Pls
5030 2136 Pls
3240 3704 Pls
4093 546 Pls
5573 4314 Pls
7201 2576 Pls
5825 2063 Pls
6417 2555 Pls
4587 5401 Pls
5250 3416 Pls
5427 1156 Pls
3966 2043 Pls
6642 3486 Pls
6173 4599 Pls
5368 3686 Pls
4568 4227 Pls
5686 1852 Pls
4732 3535 Pls
4583 3596 Pls
6398 2431 Pls
3705 3736 Pls
5403 2903 Pls
4119 2092 Pls
4211 4485 Pls
3701 2989 Pls
6423 2062 Pls
4537 2978 Pls
5616 3403 Pls
7695 2404 Pls
5192 2963 Pls
2416 2684 Pls
3514 3967 Pls
3064 1227 Pls
3865 3302 Pls
3333 3081 Pls
5045 2177 Pls
4942 3384 Pls
5760 2032 Pls
4186 2717 Pls
5529 3766 Pls
4353 2811 Pls
7181 3218 Pls
4683 1666 Pls
5023 4461 Pls
8033 2923 Pls
5189 2740 Pls
6479 3432 Pls
6059 5555 Pls
3545 2973 Pls
5554 4536 Pls
3944 3325 Pls
5443 3271 Pls
4165 4095 Pls
4570 4279 Pls
5333 3171 Pls
4759 3301 Pls
6152 3168 Pls
5709 2604 Pls
5735 1764 Pls
5158 2565 Pls
5405 2519 Pls
5042 2844 Pls
5752 2168 Pls
4992 2730 Pls
7200 2314 Pls
6056 6011 Pls
6056 5163 Pls
4401 5153 Pls
5508 1592 Pls
6007 2400 Pls
5272 4644 Pls
6344 3699 Pls
4237 2702 Pls
5249 4694 Pls
4804 2545 Pls
3438 3139 Pls
4786 3325 Pls
5491 1701 Pls
4685 2548 Pls
6600 4914 Pls
5979 3278 Pls
5283 2581 Pls
5053 3081 Pls
5267 4423 Pls
3637 2434 Pls
6026 2668 Pls
2898 4278 Pls
4617 4251 Pls
4447 2188 Pls
4917 3721 Pls
7321 3400 Pls
4185 4514 Pls
4395 2007 Pls
5803 3322 Pls
3070 3422 Pls
5549 2687 Pls
4521 3880 Pls
4890 1644 Pls
3868 3976 Pls
5243 3548 Pls
7411 3545 Pls
7688 1581 Pls
2449 1232 Pls
6289 3379 Pls
4940 3628 Pls
7508 3189 Pls
4496 2459 Pls
4018 2208 Pls
5840 2031 Pls
5350 1844 Pls
4739 3717 Pls
5197 4162 Pls
5428 2902 Pls
7342 3740 Pls
5562 2117 Pls
5641 3077 Pls
4080 3528 Pls
7109 4004 Pls
6528 3792 Pls
5595 2716 Pls
4379 918 Pls
4646 4226 Pls
4972 3573 Pls
4434 3019 Pls
5547 4982 Pls
4106 3036 Pls
5082 3743 Pls
4967 3721 Pls
7014 4480 Pls
5180 2602 Pls
4617 1689 Pls
5598 3686 Pls
5173 4055 Pls
5019 4985 Pls
3329 2986 Pls
6996 3883 Pls
4933 2789 Pls
7074 3963 Pls
4884 4416 Pls
6754 2548 Pls
6587 4297 Pls
% End plot #2
% Begin plot #3
2.000 UL
LT0
0.00 0.00 0.00 C 1460 8399 M
54 -45 V
43 -36 V
62 -51 V
35 -30 V
70 -57 V
28 -23 V
76 -64 V
21 -17 V
84 -70 V
13 -11 V
92 -76 V
6 -5 V
97 -81 V
2 -1 V
95 -79 V
10 -8 V
88 -73 V
17 -14 V
80 -67 V
24 -20 V
73 -61 V
32 -26 V
66 -55 V
39 -32 V
58 -48 V
47 -39 V
50 -42 V
55 -45 V
43 -36 V
62 -51 V
35 -30 V
69 -57 V
28 -24 V
77 -63 V
21 -17 V
84 -70 V
13 -11 V
92 -77 V
5 -4 V
98 -81 V
2 -2 V
95 -79 V
10 -8 V
87 -72 V
17 -15 V
81 -66 V
24 -21 V
73 -60 V
32 -27 V
65 -54 V
40 -33 V
58 -48 V
47 -39 V
50 -41 V
55 -46 V
42 -35 V
63 -52 V
35 -29 V
69 -58 V
28 -23 V
77 -64 V
20 -17 V
85 -70 V
13 -10 V
92 -77 V
5 -4 V
97 -81 V
3 -2 V
95 -79 V
10 -8 V
87 -73 V
17 -14 V
80 -66 V
25 -21 V
73 -60 V
32 -27 V
65 -54 V
40 -33 V
57 -48 V
48 -39 V
50 -42 V
55 -45 V
42 -35 V
62 -52 V
35 -29 V
70 -58 V
28 -23 V
77 -64 V
20 -17 V
85 -70 V
12 -11 V
93 -76 V
5 -4 V
97 -81 V
3 -2 V
94 -79 V
10 -8 V
88 -73 V
17 -14 V
80 -66 V
25 -21 V
72 -60 V
33 -28 V
64 -53 V
stroke 6715 4036 M
41 -34 V
57 -47 V
48 -40 V
49 -41 V
55 -46 V
42 -34 V
63 -53 V
35 -28 V
70 -59 V
27 -22 V
78 -65 V
19 -16 V
86 -71 V
12 -10 V
93 -77 V
4 -3 V
97 -81 V
3 -3 V
95 -78 V
10 -9 V
87 -72 V
18 -15 V
79 -66 V
26 -21 V
72 -59 V
33 -28 V
64 -53 V
41 -34 V
56 -47 V
49 -40 V
49 -41 V
55 -46 V
42 -35 V
63 -52 V
34 -28 V
71 -59 V
27 -22 V
78 -65 V
19 -16 V
86 -71 V
11 -10 V
94 -77 V
4 -4 V
97 -80 V
3 -3 V
94 -78 V
11 -9 V
87 -72 V
18 -15 V
79 -66 V
26 -21 V
71 -60 V
34 -27 V
64 -53 V
41 -34 V
56 -47 V
48 -40 V
49 -41 V
56 -46 V
42 -35 V
63 -52 V
34 -29 V
71 -59 V
26 -21 V
79 -66 V
19 -15 V
86 -72 V
11 -9 V
93 -78 V
4 -3 V
98 -81 V
3 -3 V
94 -77 V
11 -10 V
86 -71 V
19 -16 V
79 -65 V
26 -22 V
71 -59 V
34 -28 V
63 -53 V
41 -34 V
57 -46 V
48 -41 V
49 -40 V
56 -47 V
41 -34 V
% End plot #3
1.000 UP
stroke
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
