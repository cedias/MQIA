%!PS-Adobe-2.0 EPSF-2.0
%%Title: frontiereGauss.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Mar 17 11:24:06 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (frontiereGauss.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (charles)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 17 11:24:06 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
780 1326 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 1326 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MRshow
0.500 UL
LTb
780 2389 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 2389 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
0.500 UL
LTb
780 3453 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 3453 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
0.500 UL
LTb
780 4516 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 4516 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
780 5579 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 5579 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
0.500 UL
LTb
780 6642 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 6642 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
780 7705 M
88 0 V
10291 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 660 7705 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MRshow
0.500 UL
LTb
1125 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 1125 200 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
0.500 UL
LTb
2892 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 2892 200 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
0.500 UL
LTb
4658 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 4658 200 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
0.500 UL
LTb
6424 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 6424 200 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
8191 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 8191 200 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MCshow
0.500 UL
LTb
9957 400 M
0 88 V
0 7911 R
0 -88 V
stroke
0.00 0.00 0.00 C 9957 200 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 8399 N
780 400 L
10379 0 V
0 7999 V
780 8399 L
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
1.00 0.00 0.00 C 6145 6149 Star
9705 5315 Star
6256 5839 Star
3937 4902 Star
5176 6950 Star
6970 6010 Star
6846 6031 Star
7000 4828 Star
8633 6320 Star
9587 4888 Star
7899 4867 Star
8316 4362 Star
7594 4957 Star
5994 5315 Star
7973 5369 Star
7118 5527 Star
7328 6914 Star
7248 6561 Star
7111 4564 Star
6841 6759 Star
10420 6906 Star
6183 6252 Star
7168 5925 Star
8489 4826 Star
5017 6426 Star
8103 5094 Star
7225 5229 Star
8795 5657 Star
10143 5510 Star
7365 4903 Star
7272 5769 Star
7792 6500 Star
6548 5493 Star
8022 5751 Star
8395 7154 Star
9839 5454 Star
8374 5847 Star
9884 5428 Star
7428 4395 Star
7524 4855 Star
8069 4659 Star
5581 5332 Star
7059 5782 Star
5439 6681 Star
9817 5167 Star
8927 4444 Star
5032 4997 Star
7298 6178 Star
6852 5941 Star
5371 4905 Star
6722 6578 Star
4044 4499 Star
7781 5578 Star
7020 5064 Star
6472 4557 Star
7401 7138 Star
8400 6262 Star
9866 5796 Star
9239 8399 Star
8113 6556 Star
4683 6158 Star
6566 5259 Star
6918 4210 Star
6105 5396 Star
6493 5883 Star
9119 5752 Star
8530 4628 Star
8468 4181 Star
9347 5264 Star
8033 5379 Star
7307 5956 Star
4665 5258 Star
9330 6727 Star
10255 5729 Star
4739 4845 Star
8475 5570 Star
5747 6715 Star
6082 6363 Star
6243 5629 Star
6504 6508 Star
8266 6100 Star
7829 5558 Star
7283 4823 Star
4930 4642 Star
7242 6541 Star
7371 6413 Star
7009 6351 Star
6230 5205 Star
5255 4604 Star
6868 6549 Star
7415 4850 Star
7811 5071 Star
8053 5762 Star
4425 5224 Star
7278 6301 Star
6683 4762 Star
6204 5616 Star
7209 4164 Star
6103 6001 Star
5256 5551 Star
9101 5606 Star
6465 7319 Star
9732 5432 Star
10071 7313 Star
7549 4027 Star
6401 6823 Star
9607 5093 Star
10254 6066 Star
5873 4469 Star
6019 6788 Star
8261 5144 Star
7868 5913 Star
7735 6126 Star
9089 5862 Star
5775 7514 Star
6029 5525 Star
8803 6060 Star
7858 6049 Star
8112 4513 Star
7572 5447 Star
5377 4498 Star
9484 6992 Star
5771 6614 Star
7300 5920 Star
8199 4261 Star
7068 5792 Star
8170 7406 Star
6676 4929 Star
8555 6419 Star
7233 4899 Star
5790 5673 Star
5553 5569 Star
6541 7021 Star
7575 4523 Star
10148 6422 Star
9452 5505 Star
5023 5446 Star
7256 6447 Star
7286 4132 Star
7020 5873 Star
8353 3975 Star
8448 6540 Star
7013 5074 Star
6021 6130 Star
6796 5541 Star
6393 3509 Star
7162 5945 Star
7298 4677 Star
8292 5812 Star
8299 4482 Star
8104 5219 Star
8274 5722 Star
4833 5507 Star
7516 6768 Star
8779 4973 Star
7131 4537 Star
4981 4623 Star
9132 6713 Star
8977 5601 Star
9262 5448 Star
7279 5298 Star
8204 5863 Star
9341 6158 Star
6401 6246 Star
8104 3585 Star
7155 4503 Star
5893 6158 Star
8174 6373 Star
8436 6524 Star
7244 5043 Star
9550 5177 Star
8110 5979 Star
7329 4863 Star
7402 6838 Star
10699 4975 Star
8766 5181 Star
7247 5922 Star
6860 5941 Star
8224 6510 Star
7071 5338 Star
5051 5186 Star
8472 5530 Star
8168 5698 Star
7547 6195 Star
6930 4117 Star
7417 4975 Star
4744 6169 Star
6684 5678 Star
5869 7544 Star
6717 6620 Star
5655 5851 Star
9124 5309 Star
6173 4870 Star
7453 4939 Star
7168 8030 Star
6002 6127 Star
7415 4926 Star
5339 5337 Star
8283 4856 Star
8793 7259 Star
9209 6384 Star
6979 6247 Star
7887 4492 Star
8137 5358 Star
8638 4684 Star
7559 6112 Star
8508 5861 Star
6746 5844 Star
6000 5103 Star
6933 5562 Star
5479 5423 Star
7523 4517 Star
7828 5309 Star
6362 6171 Star
7354 5954 Star
7241 6032 Star
10139 5872 Star
7678 7325 Star
7913 6926 Star
5711 4774 Star
9808 5636 Star
8237 4328 Star
7275 6161 Star
6636 5042 Star
7653 5120 Star
7382 5526 Star
9762 6731 Star
7102 5658 Star
7402 4174 Star
9294 4398 Star
8130 3638 Star
9528 5346 Star
7274 6282 Star
8370 6288 Star
7277 5494 Star
9220 5403 Star
6205 6086 Star
10028 5599 Star
5913 6413 Star
8042 4019 Star
7025 5113 Star
7982 6300 Star
7010 4450 Star
6957 5347 Star
6150 5876 Star
6991 5696 Star
7281 7510 Star
7749 5413 Star
9730 5895 Star
7002 5228 Star
8851 6116 Star
8929 6403 Star
7619 5577 Star
5913 6478 Star
8657 6846 Star
6340 6119 Star
6506 4081 Star
9801 4484 Star
7230 6324 Star
5265 6888 Star
5153 5091 Star
8685 4935 Star
6714 6695 Star
7977 6000 Star
8820 5456 Star
7552 5921 Star
7568 5530 Star
7600 5224 Star
6960 6082 Star
4814 7071 Star
9281 5809 Star
10068 4229 Star
6667 4716 Star
6343 5375 Star
9295 6238 Star
7558 5009 Star
8183 5221 Star
8786 6021 Star
8038 6092 Star
7434 4541 Star
7159 5486 Star
8917 5901 Star
7505 5947 Star
7471 6973 Star
8287 5688 Star
8392 6426 Star
5228 7107 Star
9358 5864 Star
8386 6661 Star
9136 4951 Star
8616 5358 Star
7473 5876 Star
8346 4944 Star
8509 6159 Star
6364 5142 Star
5665 6491 Star
8260 4066 Star
6967 6454 Star
7630 5003 Star
10824 5605 Star
5817 6152 Star
7819 5824 Star
8308 7808 Star
6224 6667 Star
7385 6607 Star
6467 7190 Star
6834 5328 Star
5990 3704 Star
8933 4524 Star
6140 5933 Star
8083 5251 Star
9652 6448 Star
8510 5255 Star
4746 6525 Star
11159 4188 Star
6752 5180 Star
7275 5651 Star
7194 3894 Star
7378 4442 Star
6438 6277 Star
6853 3489 Star
5150 6425 Star
4437 4652 Star
7138 6220 Star
7432 5882 Star
7172 4675 Star
7060 6096 Star
5477 5609 Star
7828 5923 Star
7898 4978 Star
4857 5235 Star
5889 5874 Star
10385 5932 Star
7911 5857 Star
6110 6279 Star
7445 5974 Star
6771 3904 Star
6818 5345 Star
7317 5392 Star
9041 5755 Star
2247 4856 Star
6955 5409 Star
6920 5037 Star
8617 7748 Star
5929 4031 Star
7739 4921 Star
7090 8005 Star
9273 5831 Star
4907 5575 Star
5989 5623 Star
9357 5484 Star
8025 6299 Star
8882 4709 Star
5229 6469 Star
10916 4077 Star
6744 5767 Star
7936 3943 Star
6840 4974 Star
7819 5878 Star
10099 4669 Star
6153 5593 Star
7064 4749 Star
5187 4092 Star
7714 5375 Star
9844 6006 Star
8869 3987 Star
4813 7962 Star
8414 5113 Star
9910 5514 Star
7401 5920 Star
6817 5377 Star
8573 4638 Star
7789 5881 Star
8702 5433 Star
9057 5426 Star
7549 5712 Star
10518 5472 Star
7653 6860 Star
6486 6762 Star
9341 6046 Star
6965 6821 Star
9039 4829 Star
9301 5078 Star
6397 4536 Star
8562 5847 Star
5476 6349 Star
6072 4787 Star
8365 4685 Star
7531 4829 Star
6792 5663 Star
9555 4504 Star
7351 4031 Star
6723 4576 Star
7643 4857 Star
7474 5250 Star
10533 5299 Star
5835 4858 Star
8146 5665 Star
8492 4934 Star
7423 5695 Star
5388 5635 Star
7198 5792 Star
8066 6192 Star
5403 4816 Star
8983 6160 Star
7843 4904 Star
6276 5656 Star
8715 4502 Star
7670 4629 Star
10037 5789 Star
8888 5098 Star
7892 6679 Star
7280 5114 Star
7466 6508 Star
7803 6434 Star
7927 4373 Star
8274 4856 Star
7678 5215 Star
6757 4274 Star
9248 4900 Star
6932 4453 Star
6201 4486 Star
8895 5198 Star
6948 5518 Star
9342 4597 Star
5629 5411 Star
6451 6261 Star
6730 7490 Star
6645 7138 Star
8383 7074 Star
6722 5056 Star
3836 5440 Star
6560 6728 Star
6249 5532 Star
10183 4621 Star
7219 5925 Star
8048 6879 Star
6098 5138 Star
6643 5981 Star
9631 7002 Star
8885 5734 Star
9713 6134 Star
9031 5324 Star
9457 4199 Star
7207 4911 Star
7275 6243 Star
10189 5746 Star
8430 6556 Star
8060 5742 Star
7407 4648 Star
6895 7095 Star
9658 7209 Star
8201 5966 Star
7924 6148 Star
7102 7623 Star
8099 4457 Star
8835 4949 Star
8193 5408 Star
9799 5957 Star
2639 5467 Star
4759 4117 Star
5510 6847 Star
7472 4692 Star
7478 5151 Star
6364 6212 Star
8545 5257 Star
4965 4804 Star
7177 5317 Star
5741 5595 Star
9049 6704 Star
7995 4966 Star
9041 4515 Star
10133 5670 Star
9629 5393 Star
5508 6662 Star
7704 6217 Star
5684 5949 Star
7724 4442 Star
5001 5864 Star
7619 6011 Star
6350 5147 Star
7377 5414 Star
7108 6009 Star
7371 4497 Star
8763 6051 Star
6660 4872 Star
6371 5370 Star
7129 6200 Star
7446 3924 Star
6004 5542 Star
7416 6414 Star
6398 5500 Star
10360 6453 Star
7675 5240 Star
5010 5458 Star
7195 3699 Star
7116 6695 Star
4288 4038 Star
7639 6327 Star
8230 6298 Star
% End plot #1
% Begin plot #2
2.000 UP
0.500 UL
LT1
0.00 0.00 1.00 C 7386 3915 Pls
6477 3903 Pls
5133 2246 Pls
4135 4710 Pls
6920 2189 Pls
5309 2091 Pls
7477 3526 Pls
3827 2346 Pls
7907 3232 Pls
2541 2009 Pls
5958 3361 Pls
6544 4984 Pls
6040 2527 Pls
5445 400 Pls
6087 2946 Pls
4002 3007 Pls
5747 1542 Pls
7293 2900 Pls
3774 3411 Pls
7504 3268 Pls
5199 2224 Pls
5460 2298 Pls
6454 3380 Pls
7414 4697 Pls
5849 3535 Pls
4153 2801 Pls
5452 3284 Pls
2885 3593 Pls
6800 3601 Pls
5067 3253 Pls
7915 3709 Pls
6894 2880 Pls
2860 3368 Pls
5215 4195 Pls
5934 5130 Pls
5023 3138 Pls
6014 3230 Pls
5863 3397 Pls
2221 2479 Pls
6510 4666 Pls
6579 3709 Pls
4999 3735 Pls
7365 3464 Pls
4213 4062 Pls
4940 2717 Pls
6233 2287 Pls
5412 3904 Pls
6715 4419 Pls
7014 2623 Pls
4774 4040 Pls
5890 4334 Pls
4429 3589 Pls
3940 4188 Pls
4758 2089 Pls
5510 4359 Pls
4518 3756 Pls
6562 4027 Pls
4212 4295 Pls
5858 4377 Pls
8101 3645 Pls
4695 2778 Pls
5734 4333 Pls
6853 4009 Pls
3858 3094 Pls
7886 4195 Pls
4038 4445 Pls
5437 3194 Pls
2400 4609 Pls
3100 3743 Pls
5356 2547 Pls
3086 5523 Pls
7346 3007 Pls
5962 4364 Pls
4524 3118 Pls
3776 4160 Pls
4755 4090 Pls
5002 3780 Pls
4632 3324 Pls
6298 4364 Pls
3937 4331 Pls
6001 5085 Pls
7359 3260 Pls
7252 3568 Pls
6499 3210 Pls
4923 5045 Pls
3217 3648 Pls
5655 3509 Pls
3949 4367 Pls
3489 3216 Pls
3709 4094 Pls
3572 2370 Pls
5659 3617 Pls
5236 3384 Pls
5081 3897 Pls
6292 4467 Pls
3906 4011 Pls
6258 3810 Pls
6297 4209 Pls
5939 3544 Pls
5106 2532 Pls
5537 2430 Pls
4008 3631 Pls
7210 4293 Pls
4974 3480 Pls
4800 2507 Pls
6067 2359 Pls
4897 3516 Pls
3782 4136 Pls
4483 4576 Pls
4181 4081 Pls
6346 3492 Pls
4264 3645 Pls
6972 3668 Pls
2516 2793 Pls
6955 2458 Pls
5085 4525 Pls
3977 3410 Pls
7014 3744 Pls
6079 3077 Pls
6182 4098 Pls
5637 3296 Pls
7911 4375 Pls
5517 3707 Pls
3877 3141 Pls
5013 3678 Pls
6987 3868 Pls
7976 3057 Pls
4407 3191 Pls
5614 2927 Pls
4959 3671 Pls
6112 2686 Pls
6086 4296 Pls
4475 3097 Pls
7941 3903 Pls
4298 2465 Pls
1888 3354 Pls
4444 3843 Pls
4687 4827 Pls
4690 2118 Pls
5091 2831 Pls
3605 2745 Pls
6132 3893 Pls
4982 2720 Pls
6507 4066 Pls
5170 4255 Pls
6576 3875 Pls
6192 3625 Pls
6776 4008 Pls
5678 3218 Pls
7569 2706 Pls
4659 3038 Pls
7258 3590 Pls
3957 4506 Pls
7050 2171 Pls
3585 3966 Pls
7321 4111 Pls
5406 2861 Pls
5041 3399 Pls
5974 2519 Pls
3805 2466 Pls
4422 1611 Pls
3514 5157 Pls
6127 5336 Pls
6040 3209 Pls
4182 5117 Pls
1493 4402 Pls
4976 3029 Pls
3895 4316 Pls
4357 2915 Pls
5592 2490 Pls
7421 2940 Pls
6724 2727 Pls
4774 3328 Pls
5415 1936 Pls
5422 4841 Pls
5977 4605 Pls
5747 2576 Pls
4043 4922 Pls
6790 3024 Pls
2758 3173 Pls
5092 3535 Pls
5378 3164 Pls
6312 2468 Pls
5706 4002 Pls
4565 3733 Pls
4591 3442 Pls
1968 4047 Pls
6237 4298 Pls
4080 4259 Pls
5217 3972 Pls
5717 3459 Pls
6067 4108 Pls
5127 4380 Pls
5250 4283 Pls
6199 4098 Pls
6857 4165 Pls
5739 2303 Pls
4282 3881 Pls
2797 3197 Pls
4023 3513 Pls
5213 1712 Pls
2284 4319 Pls
3540 3400 Pls
4376 4009 Pls
4238 4953 Pls
6440 2835 Pls
4547 3018 Pls
2410 3703 Pls
4693 3806 Pls
5382 3936 Pls
4454 2163 Pls
5302 3242 Pls
4522 2841 Pls
5114 3689 Pls
5000 4265 Pls
4118 3151 Pls
5189 2808 Pls
4630 4208 Pls
7227 3532 Pls
4306 1476 Pls
4973 3760 Pls
4211 1568 Pls
7847 2804 Pls
7797 4953 Pls
3945 3007 Pls
6188 5512 Pls
7019 4364 Pls
6386 2331 Pls
4984 3519 Pls
3407 4817 Pls
3635 4125 Pls
5615 4390 Pls
3385 3340 Pls
4080 3210 Pls
5297 3816 Pls
8406 4021 Pls
7098 4275 Pls
5415 3508 Pls
3121 4454 Pls
4765 3176 Pls
5004 3738 Pls
5125 2666 Pls
5444 4185 Pls
3267 3066 Pls
4277 2136 Pls
4452 2060 Pls
3269 5144 Pls
6103 3685 Pls
8972 3632 Pls
4891 3690 Pls
4688 2540 Pls
6607 3893 Pls
7600 4552 Pls
5880 4006 Pls
6668 3538 Pls
4861 2200 Pls
5232 4169 Pls
5218 1927 Pls
3822 4208 Pls
3887 2983 Pls
5442 4477 Pls
7148 2928 Pls
3626 4023 Pls
2952 5643 Pls
7991 4125 Pls
5019 3168 Pls
6574 3499 Pls
5252 2467 Pls
1602 2781 Pls
4766 3352 Pls
5320 3360 Pls
4963 2877 Pls
6667 2134 Pls
2548 5087 Pls
5582 4751 Pls
6596 3088 Pls
6770 3718 Pls
5620 3609 Pls
6542 2559 Pls
7357 3777 Pls
7122 1848 Pls
5138 5016 Pls
7618 4003 Pls
3987 4626 Pls
6406 2087 Pls
6357 5325 Pls
4952 4366 Pls
3361 3628 Pls
7048 3039 Pls
4381 1193 Pls
5522 3975 Pls
5137 2641 Pls
2239 3832 Pls
8167 3362 Pls
5991 3065 Pls
6139 3148 Pls
3315 3477 Pls
5632 1820 Pls
5248 1046 Pls
5126 1865 Pls
6939 2516 Pls
4327 2954 Pls
7875 4520 Pls
4703 5059 Pls
2915 3541 Pls
7975 3406 Pls
4286 3382 Pls
6957 3366 Pls
4190 3374 Pls
2573 3229 Pls
4144 1934 Pls
5511 3946 Pls
3951 3908 Pls
4727 3368 Pls
4548 5165 Pls
6210 3272 Pls
6783 4270 Pls
4177 5107 Pls
6753 2772 Pls
6236 2183 Pls
6503 3347 Pls
5364 3528 Pls
4499 3109 Pls
4406 2507 Pls
2781 4067 Pls
7365 3060 Pls
4299 4623 Pls
5743 2133 Pls
6112 3253 Pls
6607 3298 Pls
5961 3439 Pls
6469 3617 Pls
3908 4262 Pls
5459 2067 Pls
4643 3036 Pls
6916 4186 Pls
3745 4866 Pls
4409 2616 Pls
7754 4464 Pls
6619 4101 Pls
5672 4309 Pls
3917 3829 Pls
4893 4085 Pls
7479 5113 Pls
6430 4217 Pls
5091 4590 Pls
4307 4063 Pls
3735 4592 Pls
3167 2893 Pls
6443 3485 Pls
5436 4048 Pls
6054 3826 Pls
4237 3259 Pls
5736 3176 Pls
6006 2621 Pls
3554 3918 Pls
5299 5447 Pls
5917 3234 Pls
3141 3547 Pls
6177 3011 Pls
6772 3661 Pls
6116 2157 Pls
5202 2119 Pls
6638 3174 Pls
5497 4187 Pls
5375 3103 Pls
4628 4219 Pls
5795 3723 Pls
5552 5684 Pls
6121 3614 Pls
3437 2934 Pls
5512 3400 Pls
5425 2021 Pls
5552 3747 Pls
2948 3455 Pls
4156 3438 Pls
3929 3548 Pls
6821 2828 Pls
7249 3555 Pls
7748 4415 Pls
7315 4570 Pls
6069 3479 Pls
4323 3121 Pls
4679 3055 Pls
7570 4007 Pls
7606 3621 Pls
5139 5216 Pls
4438 3252 Pls
6048 3486 Pls
5992 2904 Pls
5135 4714 Pls
2295 4087 Pls
2503 2557 Pls
4662 4274 Pls
4099 2495 Pls
3293 2809 Pls
5936 3885 Pls
5655 4297 Pls
5330 4448 Pls
7078 3287 Pls
5660 2337 Pls
4683 2727 Pls
3841 3683 Pls
3538 2156 Pls
4624 1608 Pls
3502 3213 Pls
5220 3690 Pls
5520 2361 Pls
6451 1972 Pls
2526 4275 Pls
6281 3295 Pls
2787 3496 Pls
5503 3122 Pls
4084 2970 Pls
4947 3732 Pls
4305 3135 Pls
6801 1959 Pls
4460 2834 Pls
6045 5342 Pls
4337 3952 Pls
6728 2350 Pls
5456 4530 Pls
4168 4390 Pls
6226 3034 Pls
4794 3288 Pls
3347 3136 Pls
5497 4546 Pls
5838 5228 Pls
5799 3924 Pls
4450 2512 Pls
7343 3746 Pls
5809 3817 Pls
6068 3067 Pls
5234 3827 Pls
5636 2803 Pls
6540 4325 Pls
5830 3756 Pls
2721 3886 Pls
5505 3446 Pls
5604 4703 Pls
3255 4083 Pls
7451 2875 Pls
6140 2165 Pls
3787 3196 Pls
4033 3009 Pls
4770 3455 Pls
3289 3699 Pls
4891 4550 Pls
5554 5153 Pls
6208 3637 Pls
8980 3527 Pls
4955 1572 Pls
5384 1606 Pls
6565 3133 Pls
5574 2535 Pls
6410 3053 Pls
4602 3462 Pls
7737 4513 Pls
6760 4770 Pls
6366 2805 Pls
5976 2232 Pls
4796 3169 Pls
7073 3459 Pls
6566 2933 Pls
3772 4016 Pls
4378 3472 Pls
6593 3537 Pls
3875 3856 Pls
5937 2435 Pls
4386 3908 Pls
6041 4122 Pls
4256 2985 Pls
5888 3220 Pls
5825 6153 Pls
4421 4468 Pls
4642 3642 Pls
3585 4389 Pls
2162 3978 Pls
5004 4259 Pls
5861 3490 Pls
5491 2828 Pls
4174 2140 Pls
8393 3830 Pls
7752 4342 Pls
9567 2016 Pls
4303 2357 Pls
5112 3270 Pls
6667 4171 Pls
4586 3583 Pls
5687 5222 Pls
4487 2491 Pls
6285 2170 Pls
10315 5344 Pls
3456 3650 Pls
5371 1890 Pls
3655 2775 Pls
4868 2003 Pls
3566 2129 Pls
8514 4227 Pls
% End plot #2
% Begin plot #3
2.000 UL
LT0
0.00 0.00 0.00 C 5900 400 M
11 81 V
6 49 V
4 32 V
10 80 V
11 81 V
10 81 V
10 81 V
10 81 V
11 80 V
10 81 V
10 81 V
11 81 V
8 65 V
2 16 V
10 80 V
10 81 V
11 81 V
10 81 V
10 81 V
11 80 V
10 81 V
10 81 V
10 81 V
11 80 V
0 1 V
10 80 V
10 81 V
11 81 V
10 81 V
10 81 V
10 80 V
11 81 V
10 81 V
10 81 V
11 81 V
2 15 V
8 65 V
10 81 V
10 81 V
11 81 V
10 81 V
10 80 V
11 81 V
10 81 V
10 81 V
10 81 V
4 30 V
7 50 V
10 81 V
10 81 V
11 81 V
10 81 V
10 80 V
11 81 V
10 81 V
10 81 V
10 80 V
6 47 V
5 34 V
10 81 V
10 81 V
11 81 V
10 80 V
10 81 V
10 81 V
11 81 V
10 81 V
10 80 V
8 62 V
3 19 V
10 81 V
10 81 V
10 81 V
11 80 V
10 81 V
10 81 V
11 81 V
10 81 V
10 80 V
10 78 V
0 3 V
11 81 V
10 81 V
10 81 V
11 80 V
10 81 V
10 81 V
10 81 V
11 81 V
10 80 V
10 81 V
2 12 V
9 69 V
10 81 V
10 81 V
10 80 V
11 81 V
10 81 V
10 81 V
11 81 V
10 80 V
10 81 V
4 28 V
6 53 V
stroke 6867 7995 M
11 81 V
10 81 V
10 80 V
11 81 V
10 81 V
% End plot #3
1.000 UP
stroke
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
