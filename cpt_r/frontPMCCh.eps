%!PS-Adobe-2.0 EPSF-2.0
%%Title: frontPMCCh.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Mar 17 11:05:47 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (frontPMCCh.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (charles)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 17 11:05:47 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1497 5044 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 5044 M
[ [({}) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
0.500 UL
LTb
1497 5412 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 5412 M
[ [({}) 200.0 0.0 true true 0 (0.3)]
] -66.7 MRshow
0.500 UL
LTb
1497 5781 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 5781 M
[ [({}) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
0.500 UL
LTb
1497 6149 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 6149 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
0.500 UL
LTb
1497 6518 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 6518 M
[ [({}) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
0.500 UL
LTb
1497 6886 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 6886 M
[ [({}) 200.0 0.0 true true 0 (0.7)]
] -66.7 MRshow
0.500 UL
LTb
1497 7254 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 7254 M
[ [({}) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
0.500 UL
LTb
1497 7623 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 7623 M
[ [({}) 200.0 0.0 true true 0 (0.9)]
] -66.7 MRshow
0.500 UL
LTb
1497 7991 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 7991 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
1497 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 1497 4844 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
2140 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 2140 4844 M
[ [({}) 200.0 0.0 true true 0 (5)]
] -66.7 MCshow
0.500 UL
LTb
2782 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 2782 4844 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
3425 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 3425 4844 M
[ [({}) 200.0 0.0 true true 0 (15)]
] -66.7 MCshow
0.500 UL
LTb
4067 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 4067 4844 M
[ [({}) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
0.500 UL
LTb
4710 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 4710 4844 M
[ [({}) 200.0 0.0 true true 0 (25)]
] -66.7 MCshow
0.500 UL
LTb
5352 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 5352 4844 M
[ [({}) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1497 7991 N
0 -2947 V
3855 0 V
0 2947 V
-3855 0 V
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
0.00 0.00 1.00 C 1626 7748 M
128 -141 V
129 -76 V
128 -53 V
129 -240 V
128 -182 V
129 -347 V
128 -319 V
129 -313 V
128 -214 V
129 -213 V
128 -72 V
129 -128 V
128 -118 V
129 24 V
128 -69 V
129 -3 V
128 -86 V
129 -15 V
128 31 V
129 -26 V
128 -35 V
129 5 V
128 -57 V
129 45 V
128 -42 V
129 52 V
128 -25 V
129 -12 V
128 9 V
% End plot #1
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
6570 5042 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 5042 M
[ [({}) 200.0 0.0 true true 0 (-2)]
] -66.7 MRshow
0.500 UL
LTb
6570 5411 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 5411 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MRshow
0.500 UL
LTb
6570 5780 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 5780 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
0.500 UL
LTb
6570 6149 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 6149 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
0.500 UL
LTb
6570 6518 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 6518 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
6570 6887 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 6887 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
0.500 UL
LTb
6570 7256 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 7256 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
6570 7625 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 7625 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MRshow
0.500 UL
LTb
6570 7994 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 7994 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
7048 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 7048 4844 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
0.500 UL
LTb
7530 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 7530 4844 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
0.500 UL
LTb
8013 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8013 4844 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
0.500 UL
LTb
8496 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8496 4844 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
8979 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8979 4844 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MCshow
0.500 UL
LTb
9462 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 9462 4844 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MCshow
0.500 UL
LTb
9945 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 9945 4844 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MCshow
0.500 UL
LTb
10427 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 10427 4844 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
6570 7991 N
0 -2947 V
3854 0 V
0 2947 V
-3854 0 V
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
1.00 0.00 0.00 C 7063 5874 Star
7110 5875 Star
7289 5874 Star
7326 6242 Star
7136 6400 Star
6898 5896 Star
6857 6069 Star
7394 6097 Star
7221 5935 Star
6770 5916 Star
6893 5790 Star
6592 5943 Star
6588 5980 Star
7454 6216 Star
7252 5784 Star
6854 6230 Star
7273 6012 Star
6688 5939 Star
6774 5970 Star
6767 6223 Star
6979 6493 Star
7114 6295 Star
6625 5998 Star
7151 6291 Star
6798 6429 Star
7198 6066 Star
7088 6056 Star
6727 5805 Star
7414 6266 Star
7433 6309 Star
7485 6455 Star
6715 6007 Star
7340 6178 Star
7492 6005 Star
7298 6485 Star
6838 6162 Star
6582 6307 Star
6713 6262 Star
7518 6007 Star
7232 6143 Star
7305 6079 Star
6582 6051 Star
7380 6332 Star
6854 6292 Star
7056 6112 Star
6916 6248 Star
6858 5926 Star
7476 6329 Star
7393 5914 Star
6623 5967 Star
7441 6349 Star
6873 6261 Star
7407 6334 Star
7096 6476 Star
7089 6258 Star
6757 6317 Star
6669 6016 Star
7244 6336 Star
7153 6412 Star
7236 6420 Star
7233 6489 Star
7526 7375 Star
6755 7919 Star
7344 7798 Star
7316 7270 Star
6594 7938 Star
6721 7770 Star
6667 7545 Star
7164 7742 Star
7089 7734 Star
7191 7720 Star
7390 7538 Star
6910 7490 Star
7407 7465 Star
7523 7859 Star
7000 7399 Star
7287 7334 Star
6803 7873 Star
7280 7815 Star
7484 7982 Star
7115 7646 Star
6697 7547 Star
7360 7430 Star
7076 7568 Star
7117 7411 Star
7002 7452 Star
7398 7465 Star
6613 7304 Star
7057 7348 Star
7292 7626 Star
6952 7859 Star
7410 7664 Star
6701 7321 Star
6821 7692 Star
7174 7692 Star
6842 7679 Star
6737 7511 Star
7126 7477 Star
7273 7968 Star
7189 7930 Star
6718 7351 Star
7500 7581 Star
6579 7765 Star
7048 7528 Star
6916 7636 Star
7330 7746 Star
7456 7472 Star
6644 7388 Star
7129 7618 Star
6668 7625 Star
7104 7908 Star
6972 7428 Star
7469 7635 Star
7499 7383 Star
7397 7877 Star
7440 7318 Star
6851 7363 Star
7132 7888 Star
7518 7709 Star
7299 7440 Star
6963 7754 Star
7032 7550 Star
7509 7256 Star
8149 5556 Star
7821 5566 Star
7987 5408 Star
7834 5468 Star
7721 5454 Star
8014 5709 Star
7899 5478 Star
7712 5050 Star
8153 5774 Star
8182 5227 Star
8073 5242 Star
7835 5396 Star
8449 5614 Star
7623 5562 Star
8176 5363 Star
7860 5166 Star
7794 5344 Star
8165 5443 Star
8135 5658 Star
7915 5394 Star
7554 5209 Star
8337 5466 Star
7722 5660 Star
8267 5335 Star
8314 5212 Star
8104 5299 Star
7878 5626 Star
7776 5397 Star
8022 5676 Star
7550 5231 Star
8416 5584 Star
8217 5270 Star
8325 5588 Star
7703 5412 Star
8194 5536 Star
8201 5582 Star
8225 5425 Star
8021 5141 Star
7972 5187 Star
8197 5555 Star
7706 5598 Star
8190 5536 Star
8451 5525 Star
7917 5747 Star
7795 5074 Star
8107 5756 Star
8213 5325 Star
8075 5519 Star
7985 5599 Star
7872 5672 Star
7988 5667 Star
8470 5215 Star
7949 5676 Star
7543 5327 Star
8250 5689 Star
7578 5424 Star
8323 5235 Star
7584 5176 Star
7955 5252 Star
7587 5576 Star
7693 5377 Star
7887 5200 Star
8260 7051 Star
8348 6913 Star
7950 6963 Star
8071 6720 Star
7905 7022 Star
8213 6813 Star
7756 6933 Star
7807 6632 Star
8094 6587 Star
7660 6801 Star
8296 6742 Star
7538 6801 Star
7981 7147 Star
8002 7129 Star
7616 7162 Star
7893 7232 Star
8282 6573 Star
7834 6969 Star
7760 6868 Star
7803 6993 Star
8122 6527 Star
7867 6963 Star
8421 7228 Star
8287 7083 Star
7625 6741 Star
7534 7246 Star
8099 6793 Star
8288 6940 Star
7792 6927 Star
7665 6648 Star
8495 6959 Star
8072 6696 Star
8233 7016 Star
8025 7077 Star
8372 7146 Star
8161 6891 Star
7629 7131 Star
8417 6867 Star
7806 6905 Star
7843 7106 Star
7954 6764 Star
7772 6883 Star
8275 6899 Star
8260 6958 Star
8430 6870 Star
8418 6655 Star
8150 7165 Star
7855 6768 Star
8092 6973 Star
7949 7214 Star
7783 7169 Star
7585 7203 Star
7964 6750 Star
7590 7244 Star
7807 6779 Star
8002 7093 Star
7938 6536 Star
8464 6551 Star
8385 6790 Star
8267 7145 Star
8317 6603 Star
7887 6932 Star
9007 6294 Star
8688 6478 Star
9337 5856 Star
9008 6215 Star
9251 6183 Star
8758 6267 Star
8543 6138 Star
9055 5940 Star
9442 6117 Star
9149 6496 Star
8910 6106 Star
9098 6456 Star
8863 6435 Star
9399 6006 Star
9237 6023 Star
9031 5833 Star
8696 6040 Star
8741 6054 Star
9412 5886 Star
9300 5947 Star
9222 6448 Star
9319 6344 Star
8634 5934 Star
8831 5986 Star
9336 5889 Star
9450 6434 Star
8524 6257 Star
8595 5780 Star
8689 6316 Star
9391 6471 Star
8761 6260 Star
8569 6032 Star
8908 5935 Star
9441 6153 Star
9227 6244 Star
8551 6334 Star
8978 5906 Star
9444 6242 Star
9018 6008 Star
9218 6219 Star
9004 6159 Star
8560 6496 Star
8773 5930 Star
9219 6250 Star
9413 6197 Star
9006 6001 Star
8784 6000 Star
9024 6340 Star
9255 6388 Star
8695 6091 Star
9386 6310 Star
9103 6459 Star
9130 6036 Star
9446 6321 Star
9296 6339 Star
8739 6472 Star
8638 6273 Star
9117 6041 Star
8988 6447 Star
8533 6190 Star
8780 5918 Star
8952 6457 Star
9042 7555 Star
8558 7618 Star
8889 7494 Star
8650 7726 Star
8795 7777 Star
8729 7816 Star
9072 7512 Star
9239 7361 Star
9217 7618 Star
9360 7458 Star
8710 7630 Star
9065 7676 Star
8908 7816 Star
9110 7804 Star
8715 7338 Star
9356 7827 Star
9259 7561 Star
8669 7844 Star
8949 7689 Star
8690 7687 Star
8937 7484 Star
8747 7568 Star
9388 7531 Star
8657 7902 Star
9267 7591 Star
8647 7568 Star
8702 7783 Star
8945 7705 Star
8911 7473 Star
8523 7852 Star
9162 7381 Star
9116 7873 Star
8554 7661 Star
9388 7321 Star
9329 7816 Star
9244 7354 Star
8838 7923 Star
9110 7315 Star
8812 7595 Star
9233 7437 Star
8608 7368 Star
9148 7496 Star
8837 7706 Star
8566 7858 Star
8982 7461 Star
9119 7264 Star
9090 7377 Star
9346 7699 Star
8981 7861 Star
8566 7289 Star
8723 7680 Star
8796 7702 Star
9281 7921 Star
9054 7511 Star
9341 7772 Star
8915 7495 Star
8545 7459 Star
8550 7335 Star
9114 7724 Star
8801 7374 Star
8588 7833 Star
9416 7528 Star
9505 5185 Star
10233 5296 Star
10004 5649 Star
10108 5346 Star
10260 5054 Star
9999 5232 Star
10115 5777 Star
9830 5631 Star
9876 5336 Star
9486 5329 Star
9687 5689 Star
10084 5056 Star
10125 5379 Star
10376 5590 Star
10220 5123 Star
9479 5408 Star
10322 5652 Star
10164 5178 Star
9529 5209 Star
9859 5080 Star
10071 5444 Star
10346 5779 Star
9870 5751 Star
9806 5623 Star
10402 5151 Star
9892 5435 Star
9894 5228 Star
10310 5112 Star
9829 5177 Star
10360 5708 Star
10179 5518 Star
10072 5456 Star
9465 5441 Star
9912 5284 Star
9869 5455 Star
10003 5305 Star
9776 5760 Star
9922 5527 Star
9572 5542 Star
10119 5097 Star
9470 5620 Star
10424 5775 Star
9946 5485 Star
10354 5340 Star
9566 5643 Star
10067 5374 Star
10320 5268 Star
9758 5410 Star
10305 5780 Star
9735 5616 Star
10358 5678 Star
10053 5499 Star
10226 5674 Star
9838 5388 Star
9517 5658 Star
10378 5067 Star
9885 5291 Star
9584 5161 Star
10282 5684 Star
10071 5556 Star
9995 5073 Star
10003 5056 Star
9673 6670 Star
9576 7106 Star
10216 6687 Star
10397 6763 Star
10374 6905 Star
9656 7074 Star
9636 6558 Star
9966 7074 Star
9901 6781 Star
9882 6854 Star
10208 6947 Star
9643 6868 Star
9496 7086 Star
10137 6823 Star
9509 6889 Star
9656 6899 Star
10185 7068 Star
10053 6549 Star
9884 6790 Star
10206 7146 Star
10393 7132 Star
9905 6943 Star
9596 6937 Star
9691 6570 Star
9681 6655 Star
10293 6722 Star
9658 7205 Star
9822 6867 Star
10384 6754 Star
9464 6703 Star
9986 7192 Star
10102 6970 Star
9957 7154 Star
9740 6736 Star
10299 6824 Star
10030 7096 Star
10393 6983 Star
9651 7203 Star
9966 6672 Star
10168 7054 Star
9979 6810 Star
9616 6562 Star
10005 7064 Star
10154 6838 Star
9517 7047 Star
10076 6828 Star
9527 6785 Star
10007 7242 Star
9997 6655 Star
10062 7232 Star
10251 6732 Star
10009 6933 Star
10287 7163 Star
10201 7088 Star
10015 6871 Star
10024 6926 Star
10065 7107 Star
10264 6917 Star
9548 6960 Star
9946 7032 Star
10314 7007 Star
9473 6917 Star
% End plot #1
% Begin plot #2
2.000 UP
0.500 UL
LT1
0.00 0.00 1.00 C 7249 5691 Pls
7050 5252 Pls
6779 5604 Pls
6620 5241 Pls
6769 5392 Pls
6808 5591 Pls
6619 5241 Pls
6642 5196 Pls
7211 5685 Pls
6650 5349 Pls
7042 5464 Pls
7509 5218 Pls
6812 5080 Pls
6617 5769 Pls
7194 5626 Pls
6598 5107 Pls
7059 5281 Pls
7209 5337 Pls
6884 5140 Pls
6953 5394 Pls
6804 5385 Pls
7253 5248 Pls
7037 5572 Pls
6715 5269 Pls
6980 5308 Pls
6597 5251 Pls
7475 5310 Pls
6782 5137 Pls
7117 5351 Pls
6902 5194 Pls
7428 5481 Pls
6994 5533 Pls
7116 5092 Pls
6800 5065 Pls
7391 5464 Pls
7393 5558 Pls
7432 5612 Pls
6981 5331 Pls
7321 5568 Pls
6640 5067 Pls
7004 5316 Pls
7526 5142 Pls
6866 5072 Pls
7062 5633 Pls
6599 5091 Pls
6571 5155 Pls
7015 5119 Pls
7331 5142 Pls
7148 5274 Pls
6801 5397 Pls
6759 5149 Pls
7025 5523 Pls
7306 5557 Pls
7007 5443 Pls
6892 5073 Pls
6735 5679 Pls
6868 5638 Pls
6798 5328 Pls
7499 5458 Pls
7339 5442 Pls
7479 5403 Pls
6775 5454 Pls
7318 7192 Pls
6593 6591 Pls
6672 7028 Pls
7246 6870 Pls
6776 6929 Pls
7013 6822 Pls
6935 6926 Pls
7180 7003 Pls
6794 6540 Pls
7347 6775 Pls
7498 6997 Pls
6662 7127 Pls
7275 7112 Pls
6767 6631 Pls
6936 7155 Pls
7420 7187 Pls
6593 6773 Pls
7338 6757 Pls
7508 6569 Pls
7439 6766 Pls
7318 6930 Pls
7460 7144 Pls
7496 7198 Pls
7282 6995 Pls
6986 7130 Pls
7365 6809 Pls
7135 6562 Pls
7285 6972 Pls
7230 6764 Pls
7351 6865 Pls
7230 6612 Pls
7465 7209 Pls
7167 6607 Pls
6815 6544 Pls
7131 6658 Pls
7347 7226 Pls
7401 6905 Pls
6878 7194 Pls
6598 6918 Pls
7215 7030 Pls
6984 6589 Pls
6625 6709 Pls
6814 6853 Pls
7199 6710 Pls
6576 7119 Pls
7414 6567 Pls
7526 6941 Pls
7390 7102 Pls
6987 6591 Pls
7159 6763 Pls
6597 6990 Pls
7138 6861 Pls
6694 6955 Pls
7178 6769 Pls
7477 6848 Pls
6876 6741 Pls
6870 7178 Pls
6832 6732 Pls
7059 7177 Pls
7397 7015 Pls
7030 6609 Pls
6604 6902 Pls
7834 6416 Pls
7876 6279 Pls
7932 5791 Pls
7887 6434 Pls
7681 6042 Pls
7739 6320 Pls
7597 6291 Pls
8455 6005 Pls
7876 6449 Pls
7775 5820 Pls
7574 5911 Pls
7981 5970 Pls
7993 6282 Pls
7800 6065 Pls
7672 6200 Pls
8351 6072 Pls
7576 5877 Pls
7643 6461 Pls
7930 6457 Pls
8076 6094 Pls
8418 5857 Pls
7663 6347 Pls
8496 5805 Pls
8156 6129 Pls
8453 5790 Pls
7644 6147 Pls
8201 5905 Pls
8271 6093 Pls
7865 5888 Pls
8363 5974 Pls
7984 6065 Pls
7664 6476 Pls
7878 6408 Pls
7733 6467 Pls
8482 6395 Pls
7574 6220 Pls
7552 6432 Pls
8355 6450 Pls
8367 6343 Pls
8140 6480 Pls
8081 6257 Pls
8357 6343 Pls
8078 6431 Pls
7684 6086 Pls
8137 5811 Pls
7852 6001 Pls
7993 5886 Pls
7959 6495 Pls
8189 6261 Pls
8422 6490 Pls
7633 6419 Pls
8249 6397 Pls
8343 6074 Pls
8333 5824 Pls
7746 6276 Pls
8474 5792 Pls
7583 6285 Pls
8478 6225 Pls
8112 5992 Pls
8438 6400 Pls
8132 6102 Pls
7809 6130 Pls
8293 7269 Pls
8153 7566 Pls
8100 7835 Pls
7980 7480 Pls
8440 7410 Pls
7734 7836 Pls
8023 7528 Pls
7978 7794 Pls
7720 7630 Pls
7972 7444 Pls
8156 7722 Pls
8078 7338 Pls
7650 7886 Pls
8305 7719 Pls
8185 7431 Pls
8346 7437 Pls
7770 7342 Pls
8317 7469 Pls
8059 7426 Pls
7849 7915 Pls
7563 7378 Pls
7831 7500 Pls
7594 7497 Pls
7653 7307 Pls
7997 7547 Pls
7687 7975 Pls
8230 7923 Pls
7856 7831 Pls
7715 7369 Pls
8432 7384 Pls
7837 7419 Pls
7919 7621 Pls
7989 7416 Pls
7715 7505 Pls
8327 7792 Pls
8016 7867 Pls
8199 7878 Pls
8356 7598 Pls
8204 7543 Pls
7883 7542 Pls
7647 7952 Pls
7576 7682 Pls
8246 7433 Pls
7593 7735 Pls
8079 7776 Pls
7907 7550 Pls
7611 7414 Pls
8335 7441 Pls
7893 7706 Pls
7533 7394 Pls
7886 7794 Pls
7816 7603 Pls
7920 7283 Pls
8333 7295 Pls
7832 7754 Pls
8448 7991 Pls
8251 7421 Pls
8298 7547 Pls
7976 7464 Pls
8398 7403 Pls
7699 7283 Pls
8003 7660 Pls
9198 5253 Pls
8931 5361 Pls
9136 5056 Pls
9124 5141 Pls
9106 5187 Pls
9093 5334 Pls
9278 5661 Pls
9389 5295 Pls
8548 5430 Pls
9450 5269 Pls
8743 5575 Pls
8707 5044 Pls
8832 5169 Pls
9374 5112 Pls
8945 5071 Pls
8796 5269 Pls
9411 5704 Pls
8711 5670 Pls
8563 5147 Pls
8771 5164 Pls
8659 5449 Pls
8509 5323 Pls
9130 5696 Pls
8640 5330 Pls
8853 5534 Pls
8970 5550 Pls
8671 5080 Pls
8570 5249 Pls
9198 5381 Pls
8866 5686 Pls
8620 5046 Pls
9015 5468 Pls
9294 5210 Pls
9247 5585 Pls
9402 5577 Pls
8777 5120 Pls
8929 5404 Pls
9382 5084 Pls
8855 5705 Pls
8617 5075 Pls
8526 5493 Pls
8512 5270 Pls
9172 5762 Pls
8994 5626 Pls
8594 5454 Pls
9121 5250 Pls
9227 5648 Pls
8920 5219 Pls
8624 5206 Pls
8945 5219 Pls
9316 5728 Pls
9057 5517 Pls
9274 5685 Pls
9383 5329 Pls
9040 5188 Pls
8593 5166 Pls
8862 5554 Pls
8999 5467 Pls
8696 5644 Pls
8640 5504 Pls
8917 5562 Pls
8633 7201 Pls
9184 7220 Pls
9375 6785 Pls
8579 7128 Pls
8984 6918 Pls
9043 7111 Pls
8932 6728 Pls
8754 7046 Pls
8846 7014 Pls
8710 6797 Pls
8699 6755 Pls
9206 6656 Pls
8729 7149 Pls
9369 7039 Pls
9430 6656 Pls
9221 7119 Pls
9016 6766 Pls
8659 7024 Pls
9333 6822 Pls
9273 6565 Pls
9372 6970 Pls
9268 6583 Pls
8943 6837 Pls
8530 6661 Pls
9456 6919 Pls
9456 7073 Pls
8734 6661 Pls
9039 6753 Pls
8995 6711 Pls
8764 6932 Pls
9215 7102 Pls
8719 7213 Pls
9062 6581 Pls
8755 6912 Pls
8662 6926 Pls
8527 6935 Pls
9000 7105 Pls
9301 7174 Pls
8931 6729 Pls
8541 7019 Pls
8498 6548 Pls
9450 6566 Pls
8601 6656 Pls
9429 6643 Pls
8833 6820 Pls
8949 6586 Pls
8900 6979 Pls
9243 6777 Pls
8818 7129 Pls
9196 6953 Pls
8872 7206 Pls
9426 7154 Pls
8887 7014 Pls
9342 6852 Pls
8613 7191 Pls
9449 6610 Pls
9357 7081 Pls
9128 7028 Pls
8743 7194 Pls
9133 7108 Pls
8866 6832 Pls
8551 6634 Pls
9828 5988 Pls
9963 6333 Pls
10018 6401 Pls
9887 6460 Pls
9541 6228 Pls
10273 6150 Pls
9703 6204 Pls
9574 6399 Pls
9468 6269 Pls
10213 5815 Pls
10138 6493 Pls
10015 6430 Pls
10350 6336 Pls
10139 5879 Pls
10086 6402 Pls
10293 6064 Pls
10119 6458 Pls
10374 6047 Pls
9855 6020 Pls
9991 5990 Pls
9688 6046 Pls
9480 6110 Pls
10068 6190 Pls
10090 6236 Pls
9728 6430 Pls
9482 5883 Pls
9617 6051 Pls
9639 5806 Pls
10415 6233 Pls
9770 6302 Pls
10162 5945 Pls
9543 6383 Pls
9653 6124 Pls
10415 5875 Pls
9816 6483 Pls
9983 6042 Pls
10258 6108 Pls
9661 6480 Pls
10267 6151 Pls
9875 6184 Pls
9692 6136 Pls
9997 6337 Pls
10187 6270 Pls
10228 5821 Pls
9767 5996 Pls
9507 5875 Pls
9992 6124 Pls
10280 5976 Pls
9608 6452 Pls
9669 6109 Pls
9635 6193 Pls
10088 5960 Pls
10339 6257 Pls
10034 6355 Pls
9669 6477 Pls
9682 5929 Pls
9965 6409 Pls
9537 6390 Pls
9878 6460 Pls
9724 5814 Pls
9882 6019 Pls
9538 6075 Pls
10278 7312 Pls
9538 7824 Pls
9605 7322 Pls
10415 7342 Pls
9947 7341 Pls
10289 7646 Pls
9581 7280 Pls
9521 7522 Pls
9599 7540 Pls
9819 7443 Pls
10226 7641 Pls
9712 7940 Pls
9759 7302 Pls
9644 7702 Pls
9494 7704 Pls
10119 7989 Pls
10046 7952 Pls
9726 7946 Pls
9867 7594 Pls
9958 7965 Pls
10329 7639 Pls
9578 7427 Pls
9587 7534 Pls
9626 7269 Pls
9705 7781 Pls
10067 7919 Pls
9473 7270 Pls
9998 7925 Pls
9709 7861 Pls
9513 7311 Pls
10332 7491 Pls
10399 7624 Pls
9931 7318 Pls
9592 7637 Pls
10229 7560 Pls
9713 7732 Pls
10272 7714 Pls
10173 7284 Pls
9659 7890 Pls
9510 7579 Pls
10139 7428 Pls
9821 7652 Pls
9629 7342 Pls
9969 7789 Pls
9870 7668 Pls
10269 7448 Pls
10409 7970 Pls
9796 7856 Pls
10413 7808 Pls
9729 7710 Pls
10202 7593 Pls
9548 7449 Pls
10297 7327 Pls
9917 7790 Pls
10137 7807 Pls
9698 7498 Pls
10127 7693 Pls
9932 7801 Pls
9956 7558 Pls
9498 7667 Pls
9824 7967 Pls
10356 7518 Pls
% End plot #2
% Begin plot #3
2.000 UL
LT0
0.00 0.00 0.00 C 6570 5238 M
79 17 V
78 17 V
60 13 V
19 3 V
79 16 V
78 17 V
79 16 V
36 8 V
43 8 V
78 16 V
79 15 V
79 16 V
23 5 V
55 10 V
79 15 V
78 15 V
79 15 V
26 5 V
53 9 V
78 14 V
79 14 V
79 15 V
48 8 V
30 5 V
79 13 V
79 13 V
78 13 V
79 13 V
23 3 V
56 9 V
78 11 V
79 11 V
79 12 V
78 11 V
49 6 V
30 4 V
79 10 V
78 9 V
79 10 V
79 9 V
78 8 V
79 9 V
18 2 V
61 5 V
78 7 V
79 7 V
78 6 V
79 6 V
79 6 V
78 5 V
79 4 V
79 5 V
78 3 V
79 4 V
55 2 V
24 1 V
78 2 V
79 1 V
% End plot #3
% Begin plot #4
stroke
LT0
0.00 0.00 0.00 C 6570 6396 M
79 4 V
78 3 V
79 4 V
79 4 V
78 3 V
79 4 V
79 4 V
78 4 V
35 1 V
44 3 V
79 4 V
78 4 V
79 4 V
78 4 V
79 4 V
79 4 V
78 3 V
79 4 V
79 4 V
78 4 V
79 4 V
79 4 V
78 4 V
79 4 V
54 2 V
25 2 V
78 4 V
79 4 V
79 4 V
78 4 V
79 3 V
79 4 V
78 4 V
79 3 V
79 4 V
78 4 V
79 3 V
79 3 V
78 4 V
79 3 V
78 3 V
79 4 V
24 1 V
55 2 V
78 3 V
79 3 V
79 3 V
78 3 V
79 3 V
79 3 V
78 3 V
79 3 V
% End plot #4
% Begin plot #5
stroke
LT0
0.00 0.00 0.00 C 6570 7303 M
79 -6 V
78 -6 V
79 -6 V
79 -5 V
78 -6 V
75 -5 V
4 0 V
79 -4 V
78 -5 V
79 -4 V
79 -3 V
78 -4 V
79 -3 V
78 -3 V
79 -3 V
79 -2 V
78 -2 V
79 -2 V
79 -1 V
78 -1 V
79 -1 V
79 0 V
78 0 V
79 0 V
79 1 V
78 1 V
79 1 V
79 2 V
78 2 V
79 2 V
79 3 V
78 3 V
79 4 V
79 4 V
78 4 V
79 4 V
79 5 V
29 2 V
49 4 V
79 6 V
78 6 V
79 7 V
79 6 V
78 8 V
79 7 V
79 8 V
78 8 V
9 0 V
70 8 V
79 9 V
78 9 V
79 10 V
% End plot #5
1.000 UP
stroke
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1497 950 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 950 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1497 1539 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 1539 M
[ [({}) 200.0 0.0 true true 0 (0.1)]
] -66.7 MRshow
0.500 UL
LTb
1497 2129 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 2129 M
[ [({}) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
0.500 UL
LTb
1497 2718 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 2718 M
[ [({}) 200.0 0.0 true true 0 (0.3)]
] -66.7 MRshow
0.500 UL
LTb
1497 3308 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 3308 M
[ [({}) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
0.500 UL
LTb
1497 3897 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1377 3897 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
0.500 UL
LTb
1497 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 1497 750 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
2140 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 2140 750 M
[ [({}) 200.0 0.0 true true 0 (5)]
] -66.7 MCshow
0.500 UL
LTb
2782 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 2782 750 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
3425 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 3425 750 M
[ [({}) 200.0 0.0 true true 0 (15)]
] -66.7 MCshow
0.500 UL
LTb
4067 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 4067 750 M
[ [({}) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
0.500 UL
LTb
4710 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 4710 750 M
[ [({}) 200.0 0.0 true true 0 (25)]
] -66.7 MCshow
0.500 UL
LTb
5352 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 5352 750 M
[ [({}) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1497 3897 N
0 -2947 V
3855 0 V
0 2947 V
-3855 0 V
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
0.00 0.00 1.00 C 1626 3426 M
1754 2419 L
129 -653 V
128 -395 V
129 -152 V
128 -45 V
129 -11 V
128 -9 V
129 -4 V
128 -7 V
129 -1 V
128 -7 V
129 -4 V
128 -7 V
129 2 V
128 -7 V
129 -8 V
128 11 V
129 2 V
128 -10 V
129 1 V
128 -3 V
129 2 V
128 -4 V
129 2 V
128 -6 V
129 5 V
128 -6 V
129 -2 V
128 0 V
% End plot #1
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
6570 1259 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 1259 M
[ [({}) 200.0 0.0 true true 0 (-2)]
] -66.7 MRshow
0.500 UL
LTb
6570 1842 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 1842 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
0.500 UL
LTb
6570 2425 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 2425 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
6570 3008 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 3008 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
6570 3591 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6450 3591 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
6948 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 6948 750 M
[ [({}) 200.0 0.0 true true 0 (-2)]
] -66.7 MCshow
0.500 UL
LTb
7337 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 7337 750 M
[ [({}) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
0.500 UL
LTb
7726 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 7726 750 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
0.500 UL
LTb
8115 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8115 750 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
0.500 UL
LTb
8504 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8504 750 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
8893 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 8893 750 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MCshow
0.500 UL
LTb
9282 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 9282 750 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MCshow
0.500 UL
LTb
9671 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 9671 750 M
[ [({}) 200.0 0.0 true true 0 (1.5)]
] -66.7 MCshow
0.500 UL
LTb
10060 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 10060 750 M
[ [({}) 200.0 0.0 true true 0 (2)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
6570 3897 N
0 -2947 V
3854 0 V
0 2947 V
-3854 0 V
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
1.00 0.00 0.00 C 8184 2620 Star
8337 2684 Star
8803 2798 Star
8370 2752 Star
8212 2689 Star
8544 2808 Star
8623 2805 Star
8345 2752 Star
8864 2843 Star
8062 2869 Star
8259 2721 Star
8251 2880 Star
8654 2651 Star
8651 2945 Star
8605 2895 Star
8178 2766 Star
8874 2665 Star
8509 2804 Star
8410 2670 Star
8537 2702 Star
8152 2724 Star
8817 2675 Star
8372 2758 Star
8355 2824 Star
8849 2899 Star
8800 2715 Star
8295 2814 Star
8575 2686 Star
8566 2877 Star
8111 2711 Star
8686 2875 Star
8525 2877 Star
8332 2885 Star
7708 2841 Star
8228 2682 Star
8263 2792 Star
8662 2773 Star
8659 2814 Star
7978 2880 Star
8418 2687 Star
8646 2799 Star
8486 2858 Star
8220 2833 Star
8611 2780 Star
8411 2755 Star
8514 2674 Star
8601 2798 Star
8113 2713 Star
8432 2898 Star
8480 2787 Star
7971 2864 Star
8624 2945 Star
9020 2753 Star
8359 2863 Star
8659 2814 Star
8791 2804 Star
8188 2819 Star
8284 2773 Star
8545 2896 Star
8851 2689 Star
8197 2695 Star
8369 2808 Star
8571 2741 Star
8977 2718 Star
8073 2782 Star
8678 2712 Star
8413 2612 Star
8538 2810 Star
8710 2829 Star
8178 2848 Star
8104 2749 Star
8663 2734 Star
8791 2748 Star
8063 2828 Star
8482 2709 Star
8231 2729 Star
8225 2891 Star
8181 2791 Star
8491 2753 Star
8192 2579 Star
8291 2786 Star
9083 2925 Star
8698 2690 Star
8312 2731 Star
8299 2807 Star
8801 2811 Star
8183 2928 Star
8715 2733 Star
8261 2846 Star
8710 2684 Star
8217 2860 Star
8564 2832 Star
8647 2775 Star
8951 2744 Star
8444 2855 Star
8220 2756 Star
8393 2720 Star
8323 2815 Star
8332 2650 Star
8682 2786 Star
8554 2762 Star
7979 2830 Star
8510 2864 Star
8484 2724 Star
8528 2764 Star
8588 2739 Star
8558 2781 Star
8208 2755 Star
8403 2774 Star
8551 2912 Star
8271 2755 Star
8272 2652 Star
8401 2753 Star
8525 2872 Star
8610 2770 Star
8493 2781 Star
8668 2808 Star
8546 2884 Star
8394 2727 Star
8525 2802 Star
8060 2705 Star
8545 2847 Star
8293 2629 Star
8464 2932 Star
8277 2847 Star
8740 2734 Star
8643 2916 Star
8352 2836 Star
8677 2873 Star
8414 2644 Star
8628 2961 Star
8526 2894 Star
8205 2746 Star
8039 2835 Star
8549 2656 Star
8622 2784 Star
8742 2841 Star
8443 2760 Star
8569 2705 Star
8672 2828 Star
8168 2872 Star
8242 2781 Star
8244 2849 Star
8562 2678 Star
8653 2967 Star
8561 2860 Star
8365 2690 Star
8762 2761 Star
8932 2825 Star
8320 2797 Star
8629 2785 Star
8346 2724 Star
8282 2828 Star
8206 2634 Star
8158 2728 Star
8360 2731 Star
8298 2718 Star
8720 2940 Star
8813 2744 Star
8787 2889 Star
8352 2870 Star
8157 2633 Star
8203 2857 Star
8536 2753 Star
8475 2930 Star
8579 2618 Star
8661 2739 Star
8925 2745 Star
8194 2762 Star
8412 2866 Star
8055 2801 Star
8328 2716 Star
8501 2700 Star
8625 2877 Star
8639 2864 Star
8231 2713 Star
8262 2767 Star
8810 2785 Star
8507 2701 Star
8298 2508 Star
8431 2708 Star
8175 2801 Star
8437 2881 Star
9063 2852 Star
8223 2848 Star
8583 2797 Star
8383 2793 Star
8502 2856 Star
8798 2809 Star
8647 2734 Star
8656 2821 Star
8407 2926 Star
8236 2743 Star
8514 2895 Star
8669 2640 Star
8351 2801 Star
8925 2791 Star
8384 2844 Star
8487 2855 Star
8521 2699 Star
8479 2648 Star
8572 2798 Star
8306 2727 Star
8598 2884 Star
8605 2954 Star
8417 2748 Star
8355 2812 Star
8433 2834 Star
8514 2701 Star
8594 2878 Star
8566 2671 Star
8317 2666 Star
8626 2711 Star
8775 2847 Star
8499 2730 Star
8618 2927 Star
8913 2741 Star
8522 2719 Star
8897 2842 Star
8251 2850 Star
8183 2668 Star
8539 2816 Star
8587 2922 Star
8366 2764 Star
8336 2803 Star
8626 2477 Star
8054 2730 Star
8564 2690 Star
8912 2801 Star
8583 2883 Star
8689 2822 Star
8272 2826 Star
8259 2875 Star
8850 2866 Star
8796 2973 Star
8819 2844 Star
8241 2807 Star
8186 2748 Star
8770 2738 Star
8899 2723 Star
8538 2835 Star
8949 2806 Star
8600 2846 Star
8669 2806 Star
7667 2805 Star
8411 2746 Star
8792 2818 Star
8415 2829 Star
8823 2844 Star
8559 2642 Star
8135 2912 Star
8466 2800 Star
8314 2825 Star
8312 2952 Star
8480 2819 Star
9044 2893 Star
8703 2931 Star
8365 2740 Star
8588 2726 Star
8402 2662 Star
8177 2862 Star
9008 2874 Star
8540 2666 Star
8622 2798 Star
8386 2710 Star
8874 2796 Star
8505 2728 Star
8214 2781 Star
8790 2941 Star
8638 2758 Star
8691 2854 Star
8675 2723 Star
8448 2626 Star
8677 2790 Star
8464 2709 Star
8336 2630 Star
8379 2823 Star
8553 2781 Star
8868 2862 Star
8574 2905 Star
8666 2812 Star
7993 2676 Star
8044 2759 Star
8690 2792 Star
8156 2913 Star
8960 2708 Star
8397 2687 Star
8679 2684 Star
8610 2966 Star
8111 2903 Star
7974 2738 Star
8459 2869 Star
8432 2851 Star
8217 2687 Star
8827 2751 Star
8371 2868 Star
8407 2577 Star
8946 2808 Star
8550 2840 Star
8476 2860 Star
8353 2849 Star
8676 2698 Star
8405 2757 Star
8738 2817 Star
8907 2627 Star
8354 2799 Star
8824 2595 Star
8269 2789 Star
8635 2776 Star
8251 2712 Star
8341 2733 Star
8282 2847 Star
8409 2744 Star
8428 2896 Star
8248 2835 Star
8771 2797 Star
8310 2777 Star
8454 2818 Star
8633 2754 Star
8661 2940 Star
8714 2707 Star
8302 2737 Star
8618 2895 Star
8154 2817 Star
8807 2767 Star
7803 3075 Star
8575 2707 Star
8593 2707 Star
8635 2664 Star
8425 2879 Star
8223 2715 Star
8408 2641 Star
8322 2728 Star
9110 2886 Star
8967 2738 Star
8735 2743 Star
8365 2767 Star
8408 2984 Star
8575 2858 Star
8603 2886 Star
8424 2906 Star
8119 2811 Star
8726 2696 Star
8571 2788 Star
8812 2756 Star
8314 2769 Star
8460 2721 Star
8858 2808 Star
8257 2910 Star
8530 2857 Star
8526 2802 Star
8421 2700 Star
8581 2782 Star
7870 2744 Star
8416 2749 Star
8438 2663 Star
8516 2852 Star
8473 2775 Star
8709 2754 Star
8739 2879 Star
8520 2778 Star
8950 2842 Star
8941 2714 Star
8255 2798 Star
8620 2699 Star
8751 2668 Star
8474 2811 Star
8174 2726 Star
8320 2855 Star
8143 2711 Star
8557 2880 Star
8835 2723 Star
8392 2737 Star
8104 2640 Star
8170 2801 Star
8343 2830 Star
8460 2777 Star
8607 2903 Star
8223 2846 Star
9094 2806 Star
8775 2868 Star
8149 2947 Star
8438 2898 Star
8252 2890 Star
8881 2815 Star
8722 2698 Star
8823 2675 Star
8399 2904 Star
8880 2886 Star
8643 2748 Star
8337 2786 Star
8385 2814 Star
8488 2819 Star
8353 2787 Star
8733 2781 Star
8675 2958 Star
8545 2938 Star
8127 2661 Star
8656 2674 Star
7998 2765 Star
9059 2790 Star
8506 2937 Star
8669 2725 Star
8471 2752 Star
8157 2820 Star
8152 2751 Star
8516 2721 Star
8860 2748 Star
8829 2783 Star
8221 2849 Star
8469 2752 Star
8346 2732 Star
8736 2743 Star
8514 2864 Star
8375 2844 Star
8537 2696 Star
8390 2831 Star
8911 2902 Star
8450 2703 Star
8284 2830 Star
8574 2773 Star
7979 2673 Star
8349 2766 Star
8251 2784 Star
9194 2905 Star
8150 2706 Star
8622 2717 Star
8521 2808 Star
8539 2864 Star
8292 2800 Star
8259 2762 Star
8781 2774 Star
8753 2634 Star
8495 2634 Star
8189 2765 Star
8306 2804 Star
8441 2795 Star
8277 2629 Star
9059 2787 Star
8342 2866 Star
8741 2779 Star
9085 2785 Star
8520 2718 Star
8805 2782 Star
8535 2726 Star
8757 2831 Star
8461 2577 Star
8527 2802 Star
8830 2865 Star
8895 2824 Star
8767 2870 Star
8106 2712 Star
8383 2925 Star
8358 2861 Star
8417 2747 Star
8623 2813 Star
8461 2863 Star
8335 2859 Star
8725 2824 Star
8160 2740 Star
8504 2793 Star
8366 2872 Star
8628 2845 Star
8915 2665 Star
8384 2633 Star
8554 2934 Star
8218 2887 Star
8541 2673 Star
8372 2755 Star
8505 2998 Star
8305 2850 Star
8659 2993 Star
8129 2674 Star
8082 2756 Star
8641 2753 Star
8472 2964 Star
8487 2914 Star
8652 2939 Star
8406 2880 Star
9061 2813 Star
8377 2866 Star
8670 2818 Star
8159 2753 Star
8421 2701 Star
8678 2886 Star
8306 2736 Star
8319 2975 Star
8704 2848 Star
8859 2712 Star
8537 2906 Star
7975 2811 Star
8674 2966 Star
8758 2693 Star
8287 2693 Star
8679 2651 Star
8341 2782 Star
8382 2778 Star
8161 2777 Star
8329 2764 Star
8331 2636 Star
% End plot #1
% Begin plot #2
2.000 UP
0.500 UL
LT1
0.00 0.00 1.00 C 8415 1666 Pls
10398 3346 Pls
7389 2202 Pls
8382 1505 Pls
6808 2919 Pls
7158 2236 Pls
8162 2054 Pls
7291 2201 Pls
9138 1500 Pls
8936 1443 Pls
8796 1569 Pls
9618 2086 Pls
8634 1632 Pls
6598 3109 Pls
8195 1564 Pls
9536 2475 Pls
8824 1561 Pls
9039 1384 Pls
7558 2081 Pls
8916 1720 Pls
6992 2622 Pls
8407 1283 Pls
10378 3408 Pls
9257 1861 Pls
7265 2202 Pls
7946 1681 Pls
9264 1736 Pls
9601 2051 Pls
9510 2219 Pls
8699 1399 Pls
9195 1786 Pls
8862 1826 Pls
7603 1951 Pls
7886 1960 Pls
6650 3676 Pls
8345 1218 Pls
8424 1712 Pls
8514 1476 Pls
10097 2618 Pls
7593 1950 Pls
7221 2140 Pls
7617 1968 Pls
7403 2081 Pls
8438 1365 Pls
9736 1901 Pls
6991 3126 Pls
8738 1318 Pls
9998 2165 Pls
6905 2680 Pls
8757 1097 Pls
9489 1870 Pls
8027 1367 Pls
9015 1373 Pls
6809 3213 Pls
6940 2926 Pls
10282 3698 Pls
10062 2755 Pls
8464 1805 Pls
9252 1914 Pls
8022 1617 Pls
9360 1943 Pls
8565 1712 Pls
9040 1613 Pls
8945 1569 Pls
6959 3229 Pls
7271 2426 Pls
6722 3295 Pls
9722 2371 Pls
10192 3334 Pls
7186 2645 Pls
10254 3436 Pls
7529 1650 Pls
8460 1609 Pls
6793 3127 Pls
8903 1754 Pls
8119 1107 Pls
10104 2316 Pls
9840 2070 Pls
10357 3176 Pls
6792 2957 Pls
8115 1658 Pls
9707 2440 Pls
8333 1534 Pls
6663 2985 Pls
8300 1532 Pls
9714 2096 Pls
7024 2553 Pls
7819 1498 Pls
8685 1567 Pls
10068 2803 Pls
10348 3025 Pls
9099 1590 Pls
9032 1321 Pls
8354 1363 Pls
9839 2311 Pls
7514 1919 Pls
9038 1640 Pls
6760 3003 Pls
10360 3897 Pls
8156 1656 Pls
8634 1337 Pls
8137 1517 Pls
9147 2271 Pls
8423 1499 Pls
9637 2061 Pls
6986 2477 Pls
9990 2543 Pls
7028 2870 Pls
10341 3196 Pls
7890 1562 Pls
7263 2015 Pls
7662 1517 Pls
7748 1595 Pls
9260 1730 Pls
6780 2698 Pls
7746 1513 Pls
8828 1472 Pls
8406 1056 Pls
8365 1766 Pls
9998 2485 Pls
8964 1948 Pls
10364 3034 Pls
7905 1411 Pls
6980 2847 Pls
7486 2020 Pls
6860 2985 Pls
6690 3065 Pls
7579 2170 Pls
6669 3798 Pls
9653 2044 Pls
10380 3226 Pls
8491 1432 Pls
8049 1140 Pls
10406 3384 Pls
8283 1394 Pls
6830 2993 Pls
10295 2867 Pls
9146 1912 Pls
7784 1644 Pls
7353 2335 Pls
6686 3184 Pls
7788 1855 Pls
7000 2712 Pls
9300 1759 Pls
8213 1407 Pls
9621 2304 Pls
9278 1911 Pls
9339 1659 Pls
9613 2355 Pls
10066 2656 Pls
7852 1801 Pls
7135 2720 Pls
8462 1782 Pls
10064 2839 Pls
7324 2246 Pls
9801 2206 Pls
8254 1492 Pls
7272 2339 Pls
7826 1521 Pls
7481 2135 Pls
7203 2435 Pls
6639 3807 Pls
9856 2780 Pls
7429 2492 Pls
10316 2921 Pls
7999 1381 Pls
6659 2913 Pls
10251 3173 Pls
8941 1371 Pls
8752 1603 Pls
9119 1428 Pls
9228 2107 Pls
9340 1384 Pls
9823 1930 Pls
9637 2150 Pls
9526 2336 Pls
10301 3038 Pls
6638 3029 Pls
9743 2091 Pls
7784 1607 Pls
8247 1785 Pls
6795 3220 Pls
10199 3051 Pls
6702 3006 Pls
7514 1592 Pls
9356 2147 Pls
8146 1302 Pls
8804 1023 Pls
10011 2556 Pls
8842 1786 Pls
9466 1840 Pls
7535 1639 Pls
8895 1728 Pls
7714 1854 Pls
8346 1586 Pls
7200 2600 Pls
8638 1154 Pls
8599 1617 Pls
8355 1622 Pls
9725 2070 Pls
9381 2064 Pls
7353 2012 Pls
6779 2996 Pls
8245 1408 Pls
9259 1373 Pls
9859 2046 Pls
7802 1558 Pls
7667 1647 Pls
6781 2933 Pls
8782 1278 Pls
9948 2696 Pls
10288 3555 Pls
8359 1162 Pls
6742 2942 Pls
8020 1358 Pls
8842 1894 Pls
6848 2871 Pls
7160 2420 Pls
8202 1379 Pls
9730 2288 Pls
10124 2837 Pls
8177 1129 Pls
6754 3575 Pls
6643 3616 Pls
7438 1964 Pls
10424 3484 Pls
7189 2233 Pls
10169 3093 Pls
7951 1530 Pls
9327 1989 Pls
7348 1954 Pls
8646 1812 Pls
7364 2251 Pls
8973 1464 Pls
7134 2320 Pls
6994 2861 Pls
8065 1573 Pls
6776 2953 Pls
10224 3215 Pls
8169 1666 Pls
9159 1950 Pls
8782 1625 Pls
8689 1606 Pls
8407 1104 Pls
8134 1492 Pls
7671 1742 Pls
7713 2054 Pls
9045 1590 Pls
10238 2813 Pls
8724 1434 Pls
10382 3224 Pls
7279 2253 Pls
8954 1425 Pls
6940 2903 Pls
8781 1793 Pls
9931 2398 Pls
9032 1133 Pls
9656 2270 Pls
8462 1610 Pls
8058 994 Pls
8261 1690 Pls
10138 2822 Pls
6914 2951 Pls
9729 2464 Pls
10397 3144 Pls
6857 2991 Pls
9914 2527 Pls
10093 3134 Pls
7610 2170 Pls
9133 1370 Pls
7230 2593 Pls
7466 1897 Pls
8867 1358 Pls
9967 2728 Pls
8451 1668 Pls
9307 1930 Pls
8890 1441 Pls
7590 2060 Pls
10293 3000 Pls
9203 1799 Pls
9513 1913 Pls
7464 1895 Pls
8925 1750 Pls
9095 1554 Pls
8566 1362 Pls
9240 1469 Pls
6963 2479 Pls
7662 1723 Pls
9230 1571 Pls
6589 3150 Pls
9607 2195 Pls
9949 2625 Pls
8016 1235 Pls
8235 1325 Pls
9530 1944 Pls
9429 1968 Pls
7601 2002 Pls
8312 1480 Pls
9143 1763 Pls
8252 1262 Pls
9462 2050 Pls
7472 2366 Pls
7925 1657 Pls
7613 1842 Pls
7879 1989 Pls
8401 1357 Pls
9156 1912 Pls
7502 1778 Pls
9050 1382 Pls
9022 1706 Pls
8592 1662 Pls
6898 2837 Pls
7544 1337 Pls
8604 1451 Pls
9055 1561 Pls
7591 2045 Pls
10051 2700 Pls
9989 2710 Pls
7098 1952 Pls
8373 1466 Pls
7285 2263 Pls
9503 2624 Pls
10355 3250 Pls
8688 1795 Pls
9597 2233 Pls
7788 2318 Pls
7003 2757 Pls
8444 1372 Pls
8048 1267 Pls
8087 1376 Pls
9222 1597 Pls
8890 1373 Pls
8708 1527 Pls
6766 3046 Pls
9537 2159 Pls
7533 1799 Pls
8417 1621 Pls
7940 1599 Pls
9079 1446 Pls
6851 2862 Pls
9333 1391 Pls
6746 3064 Pls
7899 1578 Pls
8573 1431 Pls
6771 3277 Pls
9851 2678 Pls
7702 1816 Pls
7522 1931 Pls
8319 1260 Pls
9670 1654 Pls
8089 1640 Pls
9380 2043 Pls
7569 2330 Pls
7817 1388 Pls
6914 3106 Pls
10130 3168 Pls
9066 1469 Pls
7797 1729 Pls
7844 1551 Pls
8632 1599 Pls
9881 2352 Pls
9327 2162 Pls
10018 2371 Pls
10043 2913 Pls
10065 2863 Pls
9344 1733 Pls
9897 2267 Pls
8191 1418 Pls
8820 1692 Pls
8450 1345 Pls
7209 2993 Pls
7535 2146 Pls
9469 1730 Pls
9028 1689 Pls
10270 3161 Pls
9766 1966 Pls
7556 2345 Pls
9890 2547 Pls
7737 2018 Pls
7165 2670 Pls
9895 2346 Pls
8467 1196 Pls
10028 2697 Pls
9284 1610 Pls
8437 1605 Pls
6893 2775 Pls
7092 2478 Pls
9604 2438 Pls
8617 1716 Pls
9691 2162 Pls
8935 1255 Pls
7472 2044 Pls
7206 2417 Pls
9020 1586 Pls
8094 1760 Pls
7667 1792 Pls
9157 1410 Pls
9265 1901 Pls
9581 2105 Pls
9013 1450 Pls
7365 2100 Pls
8556 1379 Pls
8957 1231 Pls
7794 1645 Pls
8279 1223 Pls
8769 1630 Pls
7777 1762 Pls
6982 2915 Pls
9662 2215 Pls
8484 1506 Pls
9636 1971 Pls
7928 1402 Pls
6575 3384 Pls
6866 3069 Pls
8944 1587 Pls
9035 1386 Pls
9956 2870 Pls
9220 1443 Pls
8241 1414 Pls
6816 3434 Pls
9401 1713 Pls
8787 1539 Pls
7442 1963 Pls
10154 2802 Pls
8384 1568 Pls
8237 1660 Pls
9331 1725 Pls
7544 2274 Pls
10081 2797 Pls
7844 1566 Pls
7475 2005 Pls
8568 1578 Pls
7849 1584 Pls
8308 1229 Pls
7213 2204 Pls
8347 1562 Pls
8518 1507 Pls
10345 3200 Pls
9794 2604 Pls
8763 1989 Pls
7682 1811 Pls
7166 2642 Pls
8158 1437 Pls
8126 1463 Pls
8308 1593 Pls
9941 2293 Pls
8607 1368 Pls
7405 2078 Pls
7782 1667 Pls
8361 1229 Pls
8683 1294 Pls
8603 1321 Pls
9051 1785 Pls
8736 1098 Pls
8207 1488 Pls
7946 1244 Pls
9657 1983 Pls
8251 950 Pls
10100 2985 Pls
10004 2810 Pls
9946 2521 Pls
9143 1526 Pls
9695 2253 Pls
10066 2448 Pls
6859 3187 Pls
9462 1857 Pls
6570 3429 Pls
6813 2619 Pls
8357 1423 Pls
7369 2301 Pls
9249 2055 Pls
8366 1350 Pls
6816 3166 Pls
7948 2007 Pls
9631 1609 Pls
9392 1633 Pls
8733 1085 Pls
8100 1576 Pls
9966 2408 Pls
8266 2152 Pls
8766 1415 Pls
7486 1900 Pls
8798 1470 Pls
9726 2221 Pls
9702 2205 Pls
10237 2817 Pls
9190 1626 Pls
9556 2168 Pls
7655 1868 Pls
9350 2116 Pls
9803 2316 Pls
8598 1209 Pls
8344 1480 Pls
8378 1252 Pls
7971 1649 Pls
7832 1309 Pls
8667 1239 Pls
9680 2048 Pls
7102 2464 Pls
9460 1973 Pls
% End plot #2
% Begin plot #3
2.000 UL
LT0
0.00 0.00 0.00 C 6917 3897 M
46 -53 V
7 -7 V
51 -60 V
21 -25 V
28 -35 V
48 -61 V
3 -3 V
43 -57 V
35 -47 V
10 -13 V
43 -60 V
26 -38 V
15 -22 V
39 -60 V
25 -39 V
13 -21 V
37 -61 V
28 -49 V
6 -11 V
35 -60 V
32 -60 V
6 -10 V
26 -50 V
32 -60 V
20 -39 V
11 -21 V
32 -61 V
33 -60 V
3 -5 V
32 -55 V
37 -60 V
10 -14 V
33 -46 V
45 -56 V
4 -4 V
62 -60 V
13 -11 V
67 -50 V
12 -7 V
78 -43 V
23 -10 V
56 -22 V
79 -25 V
51 -13 V
27 -6 V
79 -13 V
79 -9 V
78 -3 V
79 1 V
79 7 V
78 14 V
37 9 V
42 11 V
79 30 V
38 19 V
40 21 V
60 39 V
19 14 V
58 47 V
21 17 V
44 43 V
34 33 V
26 27 V
53 57 V
3 3 V
53 60 V
23 26 V
29 34 V
49 57 V
3 3 V
51 61 V
25 29 V
26 31 V
52 60 V
0 1 V
50 59 V
29 35 V
22 25 V
51 60 V
6 8 V
44 52 V
34 43 V
16 18 V
49 60 V
14 19 V
33 41 V
46 58 V
1 2 V
44 60 V
33 48 V
9 12 V
39 60 V
31 55 V
4 6 V
27 60 V
18 60 V
2 60 V
% End plot #3
1.000 UP
stroke
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
